name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main  # Superset Branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Validate AWS support
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configurar Credenciales AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Crear, etiquetar y enviar imagen de AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "superset"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      # Step 6: Update ECS Service
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json  # Update with the path to your task definition file validate with AWS
          service: <your-ecs-service-name>   # Update with the path to your task definition file validate with AWS
          cluster: <your-ecs-cluster-name> # Update with the path to your task definition file validate with AWS
          wait-for-service-stability: true

  deploy:
    name: Enviar imagen docker a AWS ECS
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Configurar Credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
 
      - name: Actualizar versi√≥n en ECS
        run: |
          aws ecs update-service --cluster name-cluster --service name-service --task-definition name-def-tarea --force-new-deployment