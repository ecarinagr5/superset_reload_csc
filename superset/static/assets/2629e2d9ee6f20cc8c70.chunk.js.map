{"version":3,"file":"2629e2d9ee6f20cc8c70.chunk.js","mappings":"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A,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,IAC7CD,GACH,mCACA,wCAEEE,GAAyB,IAAIr0B,IAAI,CACnC,uCACA,qCACA,SAEEs0B,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCAGJ,SAASE,GAAU9uB,EAAU+uB,GACzB,OAAOA,EAASC,MAAM5nC,GAAW4Y,EAAS6C,WAAWzb,IACzD,CC/EA,MAAM6nC,GACS,YADTA,GAEe,wBAGfC,GAAsB,gBACtBC,GAA+B,gBAC/BC,GAA2B,IAAIprB,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACFJ,KAAKypB,GAAS,CAACA,EAAK5+C,cAAe4+C,MAC/BgC,GAA2B,IAAIrrB,IAAI,CACrC,CAAC,gBAAiB,CAAE5c,OAAQ,QAASvM,KAAM,UAAWulB,UAAW,GAAG+Q,QACpE,CAAC,gBAAiB,CAAE/pB,OAAQ,QAASvM,KAAM,UAAWulB,UAAW,GAAG+Q,QACpE,CAAC,aAAc,CAAE/pB,OAAQ,QAASvM,KAAM,OAAQulB,UAAW,GAAG+Q,QAC9D,CAAC,aAAc,CAAE/pB,OAAQ,QAAS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","sources":["webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/schema.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/merge.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/normalize.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/info.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/types.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/defined-info.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/create.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/xlink.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/xml.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/xmlns.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/aria.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/html.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/svg.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/index.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/comma-separated-tokens/index.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/hast-util-parse-selector/lib/index.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/property-information/lib/find.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/space-separated-tokens/index.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/create-h.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack://superset/./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/index.js","webpack://superset/./node_modules/vfile-location/lib/index.js","webpack://superset/./node_modules/web-namespaces/index.js","webpack://superset/./node_modules/hast-util-from-parse5/lib/index.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/schema.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/merge.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/normalize.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/info.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/types.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/defined-info.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/create.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/xlink.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/xml.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/xmlns.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/aria.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/html.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/svg.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/index.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/property-information/lib/find.js","webpack://superset/./node_modules/zwitch/index.js","webpack://superset/./node_modules/hast-util-to-parse5/lib/index.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/comma-separated-tokens/index.js","webpack://superset/./node_modules/hast-util-to-parse5/node_modules/space-separated-tokens/index.js","webpack://superset/./node_modules/html-void-elements/index.js","webpack://superset/./node_modules/parse5/dist/common/unicode.js","webpack://superset/./node_modules/parse5/dist/common/error-codes.js","webpack://superset/./node_modules/parse5/dist/common/token.js","webpack://superset/./node_modules/parse5/dist/tokenizer/preprocessor.js","webpack://superset/./node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://superset/./node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://superset/./node_modules/entities/lib/esm/decode_codepoint.js","webpack://superset/./node_modules/entities/lib/esm/decode.js","webpack://superset/./node_modules/parse5/dist/common/html.js","webpack://superset/./node_modules/parse5/dist/tokenizer/index.js","webpack://superset/./node_modules/parse5/dist/parser/open-element-stack.js","webpack://superset/./node_modules/parse5/dist/parser/formatting-element-list.js","webpack://superset/./node_modules/parse5/dist/tree-adapters/default.js","webpack://superset/./node_modules/parse5/dist/common/doctype.js","webpack://superset/./node_modules/parse5/dist/common/foreign-content.js","webpack://superset/./node_modules/parse5/dist/parser/index.js","webpack://superset/./node_modules/entities/lib/esm/escape.js","webpack://superset/./node_modules/parse5/dist/serializer/index.js","webpack://superset/./node_modules/hast-util-raw/node_modules/unist-util-position/lib/index.js","webpack://superset/./node_modules/hast-util-raw/node_modules/unist-util-is/lib/index.js","webpack://superset/./node_modules/hast-util-raw/node_modules/unist-util-visit-parents/lib/index.js","webpack://superset/./node_modules/hast-util-raw/lib/index.js","webpack://superset/./node_modules/hast-util-raw/node_modules/unist-util-visit/lib/index.js","webpack://superset/./node_modules/rehype-raw/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('hast-util-raw').Options} Options\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":["Schema","constructor","property","normal","space","this","merge","definitions","index","length","Object","assign","normalize","value","toLowerCase","prototype","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","DefinedInfo","mask","super","mark","check","values","key","own","hasOwnProperty","create","definition","prop","properties","call","info","transform","attributes","includes","xlink","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","name","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","target","title","translate","type","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","parse","tokens","input","String","indexOf","token","trim","push","search","valid","dash","cap","find","schema","Type","test","charAt","rest","replace","camelcase","toUpperCase","dashes","kebab","$0","split","buttonTypes","Set","createH","defaultTagName","caseSensitive","adjust","createAdjustMap","selector","children","node","child","unshift","props","previous","tagName","lastIndex","match","exec","subvalue","Array","isArray","parseSelector","has","addProperty","addChild","Number","isNaN","join","parsePrimitive","concat","finalResult","nodes","Error","h","s","webNamespaces","mathml","proto","fromParse5","tree","options","settings","one","file","undefined","location","verbose","state","nodeName","reference","patch","quirksMode","childNodes","doc","loc","indices","toPoint","line","column","toOffset","point","position","namespaceURI","attrs","pos","sourceCodeLocation","startTag","endTag","createLocation","tail","opening","closing","startLine","startCol","endLine","endCol","endOffset","zwitch","parameters","fn","invalid","handlers","unknown","emptyOptions","root","element","parentSchema","currentSchema","createProperty","parentNode","fragment","publicId","systemId","padRight","padLeft","namespace","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","TokenType","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","_err","onParseError","_addGap","_processSurrogate","nextCp","charCodeAt","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","getTokenAttr","attrName","Uint16Array","map","c","_a","decodeMap","Map","fromCodePoint","codePoint","output","fromCharCode","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","NS","isNumber","ZERO","NINE","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","base","digitCount","Math","pow","parseInt","substr","startIdx","UPPER_A","UPPER_F","LOWER_A","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","get","replaceCodePoint","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","Attribute","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parser","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","getEscaper","regex","lastIdx","codePointAt","pointEnd","pointStart","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","testFunction","Boolean","looksLikeANode","empty","CONTINUE","EXIT","SKIP","knownMdxNames","parseOptions","raw","head","documentMode","handle","stitches","resetTokenizer","testOrVisitor","visitorOrReverse","maybeReverse","reverse","visitor","visit","factory","parents","defineProperty","subresult","grandparents","toResult","nodeAsParent","visitParents","stitch","toParse5","tag","createParse5Location","handleRaw","setPoint","node_","passThrough","extra","clone","cloneWithoutChildren","fakeRoot","rehypeRaw"],"sourceRoot":""}