{"version":3,"file":"5e54230eedc6a4fc4457.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/tslib/tslib.es6.mjs","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/List.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/States.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/Registry.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","webpack://superset/./node_modules/@amcharts/amcharts5/locales/en.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/Theme.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","webpack://superset/./node_modules/svg-arc-to-cubic-bezier/modules/index.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/Root.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/DataProcessor.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DateAxis.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/array.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/constant.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/curve/linear.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-path/src/path.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/path.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/point.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/line.js","webpack://superset/./node_modules/@amcharts/amcharts5/node_modules/d3-shape/src/area.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","webpack://superset/./node_modules/@amcharts/amcharts5/themes/Animated.js","webpack://superset/./node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","webpack://superset/./plugins/superset-plugin-chart-csc-line/esm/SupersetPluginChartCscLine.js","webpack://superset/./plugins/superset-plugin-chart-csc-line/esm/assets/constants/vendors.js"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p100`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @readonly\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Asserts that the condition is true.\r\n *\r\n * @param condition  Condition to check\r\n * @param message    Message to display in the error\r\n * @ignore\r\n */\r\nexport function assert(condition, message = \"Assertion failed\") {\r\n    if (!condition) {\r\n        throw new Error(message);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n    get disposers() {\r\n        return this._disposers;\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerleave\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerleave\": return \"mouseleave\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Gets the target of the event, works for shadow DOM too.\r\n */\r\nexport function getEventTarget(event) {\r\n    if (event.composedPath) {\r\n        const path = event.composedPath();\r\n        if (path.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return path[0];\r\n        }\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\nexport function getEventKey(event) {\r\n    if (event.key !== undefined) {\r\n        return event.key;\r\n    }\r\n    switch (event.keyCode) {\r\n        case 9: return \"Tab\";\r\n        case 13: return \"Enter\";\r\n        case 16: return \"Shift\";\r\n        case 17: return \"Control\";\r\n        case 27: return \"Escape\";\r\n        case 32: return \" \";\r\n        case 37: return \"ArrowLeft\";\r\n        case 38: return \"ArrowUp\";\r\n        case 39: return \"ArrowRight\";\r\n        case 40: return \"ArrowDown\";\r\n        case 46: return \"Delete\";\r\n    }\r\n    return \"\" + event.keyCode;\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = appendStylesheet(this._root, \":not(*)\");\r\n        }\r\n        $object.each(styles, (key, value) => {\r\n            this.setStyle(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\nexport function truncateTextWithEllipsis(text, maxLength, breakWords = false, ellipsis = \"...\") {\r\n    if (text.length > maxLength) {\r\n        // Find the last non-alphanumeric character before maxLength\r\n        let lastNonAlphanumericIndex = maxLength - 1;\r\n        while (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\r\n            lastNonAlphanumericIndex--;\r\n        }\r\n        if (lastNonAlphanumericIndex >= 0 && breakWords == false) {\r\n            return text.substring(0, lastNonAlphanumericIndex + 1) + '...';\r\n        }\r\n        else {\r\n            // If no non-alphanumeric character found, truncate without breaking words\r\n            return text.substring(0, maxLength) + ellipsis;\r\n        }\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Splits the string into separate characters. Keeps RTL words non-split.\r\n *\r\n * @param   source  Input\r\n * @return          Split text\r\n */\r\nexport function splitString(source) {\r\n    // Regular expression to identify RTL characters\r\n    const rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\r\n    // Regular expression to capture segments ending with specific Arabic characters\r\n    const splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\r\n    // Split input string into array of words or characters, including whitespace\r\n    let segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\r\n    let result = [];\r\n    segments.forEach(segment => {\r\n        if (segment.match(/^\\s+$/)) {\r\n            // If the segment is purely whitespace\r\n            if (segment = \" \") {\r\n                segment = \"  \";\r\n            }\r\n            result.push(segment);\r\n        }\r\n        else if (rtlChar.test(segment)) {\r\n            // If the segment contains RTL characters, handle special splits\r\n            let parts = segment.split(splitPattern).filter(part => part !== '');\r\n            // Concatenate parts processed by the split pattern directly to result\r\n            result = result.concat(parts);\r\n        }\r\n        else {\r\n            // Treat this segment as LTR: split into characters\r\n            result = result.concat([...segment]);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false, timezone) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    else if (timezone) {\r\n        const d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\r\n        const d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\r\n        return trim(d2.substr(d1.length));\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return trim(wtz);\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\r\n    const tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l,\r\n    };\r\n}\r\n/**\r\n * Converts HSV to HSL.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\r\n */\r\nexport function hsvToHsl(hsv) {\r\n    const l = hsv.v * (1 - (hsv.s / 2));\r\n    const s = (l === 0 || l === 1\r\n        ? 0\r\n        : (hsv.v - l) / Math.min(l, 1 - l));\r\n    return {\r\n        h: hsv.h,\r\n        s,\r\n        l,\r\n        a: hsv.a,\r\n    };\r\n}\r\n/**\r\n * Converts HSL to HSV.\r\n *\r\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\r\n */\r\nexport function hslToHsv(hsl) {\r\n    const v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\r\n    const s = (v === 0\r\n        ? 0\r\n        : 2 * (1 - (hsl.l / v)));\r\n    return {\r\n        h: hsl.h,\r\n        s,\r\n        v,\r\n        a: hsl.a,\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/**\r\n * Returns a color which contrasts more with the source `color`.\r\n *\r\n * @param  color             Base color\r\n * @param  lightAlternative  Light option\r\n * @param  darkAlternative   Dark option\r\n * @return New color\r\n */\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\nexport var AnimationState;\r\n(function (AnimationState) {\r\n    AnimationState[AnimationState[\"Stopped\"] = 0] = \"Stopped\";\r\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\r\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\r\n})(AnimationState || (AnimationState = {}));\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return AnimationState.Playing;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return AnimationState.Stopped;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return AnimationState.Playing;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return AnimationState.Stopped;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            if (this.autoDispose) {\r\n                $array.each(this._values, (x) => {\r\n                    x.dispose();\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n        $object.each(settings, (key) => {\r\n            this._userSettings[key] = true;\r\n        });\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.10.5\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n *\r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id) {\r\n    let found;\r\n    registry.rootElements.forEach((item) => {\r\n        if (item.dom.id == id) {\r\n            found = item;\r\n        }\r\n    });\r\n    return found;\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { AnimationState, getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        let state = AnimationState.Stopped;\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            let paused = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation.stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation.playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n                else {\r\n                    paused = true;\r\n                }\r\n            });\r\n            if (playing) {\r\n                state = AnimationState.Playing;\r\n            }\r\n            else if (paused) {\r\n                state = AnimationState.Paused;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    off(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._settingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes a callback for when value of a private setting changes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @since 5.9.2\r\n     */\r\n    offPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events !== undefined && callback !== undefined) {\r\n            $array.removeFirst(events, callback);\r\n        }\r\n        else {\r\n            delete this._privateSettingEvents[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the setting exists.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key        Settings key\r\n     * @return  {boolean}  Key exists\r\n     */\r\n    has(key) {\r\n        return key in this._settings;\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefaultFn(key, f) {\r\n        const value = this.get(key);\r\n        if (value) {\r\n            return value;\r\n        }\r\n        else {\r\n            const value = f();\r\n            this.set(key, value);\r\n            return value;\r\n        }\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!this.has(key)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes(force = false) {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected || force) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected || force) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected || force;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    /**\r\n     * Array of all entities using this template.\r\n     */\r\n    get entities() {\r\n        return this._entities;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Returns true if bounds overlap\r\n * @param bounds1 IBounds\r\n * @param bounds2 IBounds\r\n * @returns boolean\r\n */\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    const horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\r\n    const verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\r\n    return horizontalOverlap && verticalOverlap;\r\n}\r\n/**\r\n * Generates points of a spiral\r\n * @param cx\r\n * @param cy\r\n * @param radius\r\n * @param radiusY\r\n * @param innerRadius\r\n * @param step\r\n * @param radiusStep\r\n * @param startAngle\r\n * @param endAngle\r\n * @returns IPoint[]\r\n */\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    let r = innerRadius + 0.01;\r\n    let angle = startAngle * RADIANS;\r\n    let points = [];\r\n    while (r < radius + radiusStep) {\r\n        let stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n            break;\r\n        }\r\n        let degrees = angle * DEGREES;\r\n        let point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + degrees / 360 * radiusStep;\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\n/**\r\n * Returns true if circles overlap\r\n * @param circle1\r\n * @param circle2\r\n * @returns boolean\r\n */\r\nexport function circlesOverlap(circle1, circle2) {\r\n    return Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\r\n}\r\n//# sourceMappingURL=Math.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            const sprite = this._sprite;\r\n            let dispatch = true;\r\n            if (sprite.getPrivate(\"trustBounds\")) {\r\n                sprite._getBounds();\r\n                const bounds = sprite.globalBounds();\r\n                if (sprite.isType(\"Graphics\")) {\r\n                    const strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\r\n                    if (strokeWidth >= 1) {\r\n                        bounds.left -= strokeWidth;\r\n                        bounds.right += strokeWidth;\r\n                        bounds.top -= strokeWidth;\r\n                        bounds.bottom += strokeWidth;\r\n                    }\r\n                }\r\n                if (!$math.inBounds(event.point, bounds)) {\r\n                    dispatch = false;\r\n                    sprite._root._renderer.removeHovering(sprite._display);\r\n                }\r\n            }\r\n            if (dispatch && this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * Marks some setting as dirty. Could be used to trigger adapter.\r\n     * @param key\r\n     */\r\n    markDirtyKey(key) {\r\n        this._markDirtyKey(key);\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (dataItem != oldDataItem) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this,\r\n                    oldDataItem: oldDataItem,\r\n                    newDataItem: dataItem\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                if (this.isHover()) {\r\n                    this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                        this.showTooltip(e.point);\r\n                    });\r\n                }\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => {\r\n                                const tooltip = this.getTooltip();\r\n                                if (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                else {\r\n                                    this.showTooltip();\r\n                                }\r\n                            }, 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                    this._disposers.push(this._tooltipDp);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        let filter = this.get(\"filter\", \"\");\r\n        if (this.isDirty(\"blur\")) {\r\n            const blur = this.get(\"blur\", 0);\r\n            if (blur != 0) {\r\n                filter += \" blur(\" + blur + \"px)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"saturate\")) {\r\n            const saturate = this.get(\"saturate\", 1);\r\n            if (saturate != 1) {\r\n                filter += \" saturate(\" + saturate + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"brightness\")) {\r\n            const brightness = this.get(\"brightness\", 1);\r\n            if (brightness != 1) {\r\n                filter += \" brightness(\" + brightness + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"contrast\")) {\r\n            const contrast = this.get(\"contrast\", 1);\r\n            if (contrast != 1) {\r\n                filter += \" contrast(\" + contrast + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"sepia\")) {\r\n            const sepia = this.get(\"sepia\", 0);\r\n            if (sepia != 0) {\r\n                filter += \" sepia(\" + sepia + \")\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"hue\")) {\r\n            const hue = this.get(\"hue\", 0);\r\n            if (hue != 0) {\r\n                filter += \" hue-rotate(\" + hue + \"deg)\";\r\n            }\r\n        }\r\n        if (this.isDirty(\"invert\")) {\r\n            const invert = this.get(\"invert\", 0);\r\n            if (invert != 0) {\r\n                filter += \" invert(\" + invert + \")\";\r\n            }\r\n        }\r\n        if (filter) {\r\n            display.filter = filter;\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n            this._disposers.push(events.on(\"blur\", () => {\r\n                this.setPrivateRaw(\"touchHovering\", false);\r\n            }));\r\n        }\r\n        if (this.isPrivateDirty(\"focusable\")) {\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\") && !events.isDisposed()) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                                this.setPrivateRaw(\"touchHovering\", false);\r\n                                this.events.dispatch(\"pointerout\", {\r\n                                    type: \"pointerout\",\r\n                                    target: ev.target,\r\n                                    originalEvent: ev.originalEvent,\r\n                                    point: ev.point,\r\n                                    simulated: ev.simulated\r\n                                });\r\n                            }\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", null);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            let scale = 1;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n                if (parent) {\r\n                    scale *= parent.get(\"scale\", 1);\r\n                }\r\n            }\r\n            let x = (e.point.x - dragEvent.point.x) / scale;\r\n            let y = (e.point.y - dragEvent.point.y) / scale;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\") && this.isFocus()) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n            // Update tooltip position together with the Sprite\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            if (privateWidth > 0) {\r\n                bounds.right = bounds.left + privateWidth;\r\n            }\r\n            else {\r\n                bounds.left = bounds.right + privateWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            if (privateHeight > 0) {\r\n                bounds.bottom = bounds.top + privateHeight;\r\n            }\r\n            else {\r\n                bounds.top = bounds.bottom + privateHeight;\r\n            }\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        if (!this.isDisposed()) {\r\n            this.showTooltip();\r\n            this._handleOver();\r\n        }\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        if (!this.isDisposed()) {\r\n            this.hideTooltip();\r\n            this._handleOut();\r\n        }\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        if (!this.isDisposed()) {\r\n            const tooltip = this.getTooltip();\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            if ((tooltipText || tooltipHTML) && tooltip) {\r\n                const tooltipPosition = this.get(\"tooltipPosition\");\r\n                const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n                if (tooltipPosition == \"fixed\" || !point) {\r\n                    this._display._setMatrix();\r\n                    point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n                }\r\n                tooltip.set(\"pointTo\", point);\r\n                tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n                if (!tooltip.get(\"x\")) {\r\n                    tooltip.set(\"x\", point.x);\r\n                }\r\n                if (!tooltip.get(\"y\")) {\r\n                    tooltip.set(\"y\", point.y);\r\n                }\r\n                if (tooltipText) {\r\n                    tooltip.label.set(\"text\", tooltipText);\r\n                }\r\n                if (tooltipHTML) {\r\n                    tooltip.label.set(\"html\", tooltipHTML);\r\n                }\r\n                const dataItem = this.dataItem;\r\n                if (dataItem) {\r\n                    tooltip.label._setDataItem(dataItem);\r\n                }\r\n                if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                    this.hideTooltip();\r\n                    return;\r\n                }\r\n                tooltip.label.text.markDirtyText();\r\n                const promise = tooltip.show();\r\n                this.setPrivateRaw(\"showingTooltip\", true);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns an actual scale of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeScale() {\r\n        const scale = this.get(\"scale\", 1);\r\n        return this._parent ? (this._parent.compositeScale() * scale) : scale;\r\n    }\r\n    /**\r\n     * Returns an actual roation of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.9.2\r\n     */\r\n    compositeRotation() {\r\n        const rotation = this.get(\"rotation\", 0);\r\n        return this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n        this._checkDirtyFill();\r\n    }\r\n    _checkDirtyFill() {\r\n        if (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            const backgroundDisplay = this._backgroundDisplay;\r\n            const display = this._display;\r\n            display.clear();\r\n            backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                backgroundDisplay.beginFill(fill, fillOpacity);\r\n                backgroundDisplay.drawRect(0, 0, width, height);\r\n                backgroundDisplay.endFill();\r\n            }\r\n            display.angle = this.get(\"rotation\", 0);\r\n            //display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this.set(\"width\", canvas.width);\r\n            this.set(\"height\", canvas.height);\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n        const canvas = this.get(\"canvas\");\r\n        if (canvas) {\r\n            this._display.image(canvas, canvas.width, canvas.height, 0, 0);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map","/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw && typeof draw === \"function\") {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fill && !fillGradient) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            if (fillPattern) {\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                if (stroke && !strokeGradient) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin);\r\n                    this._display.endStroke();\r\n                }\r\n                if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                if (strokePattern) {\r\n                    /*\r\n                    let changed = false;\r\n                    \r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    */\r\n                    let pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.getPrivate(\"showingTooltip\")) {\r\n                this.showTooltip();\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth <= 0 || availableWidth == Infinity) {\r\n            availableWidth = .1;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.width instanceof Percent) {\r\n                            child.setPrivate(\"width\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight <= 0 || availableHeight == Infinity) {\r\n            availableHeight = .1;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                    else {\r\n                        if (child._prevSettings.height instanceof Percent) {\r\n                            child.setPrivate(\"height\", undefined);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes(force = false) {\r\n        if (super._applyThemes(force)) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes(force);\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        let width = this.get(\"width\");\r\n        let height = this.get(\"height\");\r\n        let pWidth = this.getPrivate(\"width\");\r\n        let pHeight = this.getPrivate(\"height\");\r\n        let bounds = {\r\n            left: 0,\r\n            top: 0,\r\n            right: this.width(),\r\n            bottom: this.height()\r\n        };\r\n        let layout = this.get(\"layout\");\r\n        let horizontal = false;\r\n        let vertical = false;\r\n        if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n            horizontal = true;\r\n        }\r\n        if (layout instanceof VerticalLayout) {\r\n            vertical = true;\r\n        }\r\n        if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n            // void\r\n        }\r\n        else {\r\n            let m = Number.MAX_VALUE;\r\n            let l = m;\r\n            let r = -m;\r\n            let t = m;\r\n            let b = -m;\r\n            const paddingLeft = this.get(\"paddingLeft\", 0);\r\n            const paddingTop = this.get(\"paddingTop\", 0);\r\n            const paddingRight = this.get(\"paddingRight\", 0);\r\n            const paddingBottom = this.get(\"paddingBottom\", 0);\r\n            this.children.each((child) => {\r\n                if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                    let childBounds = child.adjustedLocalBounds();\r\n                    let childX = child.x();\r\n                    let childY = child.y();\r\n                    let cl = childX + childBounds.left;\r\n                    let cr = childX + childBounds.right;\r\n                    let ct = childY + childBounds.top;\r\n                    let cb = childY + childBounds.bottom;\r\n                    if (horizontal) {\r\n                        cl -= child.get(\"marginLeft\", 0);\r\n                        cr += child.get(\"marginRight\", 0);\r\n                    }\r\n                    if (vertical) {\r\n                        ct -= child.get(\"marginTop\", 0);\r\n                        cb += child.get(\"marginBottom\", 0);\r\n                    }\r\n                    if (cl < l) {\r\n                        l = cl;\r\n                    }\r\n                    if (cr > r) {\r\n                        r = cr;\r\n                    }\r\n                    if (ct < t) {\r\n                        t = ct;\r\n                    }\r\n                    if (cb > b) {\r\n                        b = cb;\r\n                    }\r\n                }\r\n            });\r\n            if (l == m) {\r\n                l = 0;\r\n            }\r\n            if (r == -m) {\r\n                r = 0;\r\n            }\r\n            if (t == m) {\r\n                t = 0;\r\n            }\r\n            if (b == -m) {\r\n                b = 0;\r\n            }\r\n            bounds.left = l - paddingLeft;\r\n            bounds.top = t - paddingTop;\r\n            bounds.right = r + paddingRight;\r\n            bounds.bottom = b + paddingBottom;\r\n            const minWidth = this.get(\"minWidth\");\r\n            if ($type.isNumber(minWidth) && minWidth > 0) {\r\n                if (bounds.right - bounds.left < minWidth) {\r\n                    if (bounds.right >= minWidth) {\r\n                        bounds.left = bounds.right - minWidth;\r\n                    }\r\n                    else {\r\n                        bounds.right = bounds.left + minWidth;\r\n                    }\r\n                }\r\n            }\r\n            const minHeight = this.get(\"minHeight\");\r\n            if ($type.isNumber(minHeight) && minHeight > 0) {\r\n                if (bounds.bottom - bounds.top < minHeight) {\r\n                    if (bounds.bottom >= minHeight) {\r\n                        bounds.top = bounds.bottom - minHeight;\r\n                    }\r\n                    else {\r\n                        bounds.bottom = bounds.top + minHeight;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._contentWidth = bounds.right - bounds.left;\r\n        this._contentHeight = bounds.bottom - bounds.top;\r\n        if ($type.isNumber(width)) {\r\n            bounds.left = 0;\r\n            bounds.right = width;\r\n        }\r\n        if ($type.isNumber(pWidth)) {\r\n            bounds.left = 0;\r\n            bounds.right = pWidth;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = height;\r\n        }\r\n        if ($type.isNumber(pHeight)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = pHeight;\r\n        }\r\n        this._localBounds = bounds;\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateHTMLContent() {\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n        }\r\n        else {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        this._root._positionHTMLElement(this);\r\n    }\r\n    /**\r\n     * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\r\n     * the Container will scroll in such way so that target element becomes\r\n     * visible if its currently outside of view.\r\n     *\r\n     * @param  child  Target child\r\n     * @since 5.10.5\r\n     */\r\n    scrollToChild(child) {\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            let y = child.y();\r\n            let h = this.innerHeight();\r\n            let ch = child.height();\r\n            let contentH = this._contentHeight;\r\n            let max = (h - ch / 2) / contentH;\r\n            if (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\r\n                let pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\r\n                verticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            this._updateHTMLContent();\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.startGrip.setPrivate(\"visible\", false);\r\n                verticalScrollbar.endGrip.setPrivate(\"visible\", false);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    let shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY <= 0) {\r\n                        shiftY = -start;\r\n                    }\r\n                    if (end + shiftY >= 1) {\r\n                        shiftY = 1 - end;\r\n                    }\r\n                    if (start + shiftY >= 0 && end + shiftY <= 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                const parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"maxChars\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n            let fillGradient = this.get(\"fillGradient\");\r\n            if (fillGradient) {\r\n                this._display.style.fill = fillGradient.getFill(this);\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                textStyle.fill = fillGradient.getFill(this);\r\n            }\r\n            else if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        let text = this.get(\"text\", \"\");\r\n        if (this.get(\"maxChars\")) {\r\n            text = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\r\n        }\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    _getAccessibleText() {\r\n        const ariaLabel = this.get(\"ariaLabel\");\r\n        if (ariaLabel !== undefined) {\r\n            return this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\r\n        }\r\n        return this._getText();\r\n    }\r\n    /**\r\n     * Forces the text to be re-evaluated and re-populated.\r\n     */\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillGradient\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\",\r\n                \"maxChars\",\r\n                \"ariaLabel\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const text = this._text;\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            text.set(\"text\", this.get(\"text\"));\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\r\n            this._maybeUpdateHTMLColor();\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\", 0);\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\", 0);\r\n                }\r\n            }\r\n            text.set(\"x\", x);\r\n        }\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            background.setPrivate(\"visible\", text._display.textVisible);\r\n        }\r\n    }\r\n    _maybeUpdateHTMLColor() {\r\n        const htmlElement = this.getPrivate(\"htmlElement\");\r\n        if (htmlElement && this.get(\"fill\")) {\r\n            htmlElement.style.color = this.get(\"fill\").toCSSHex();\r\n            //@todo support gradient\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const text = this._text;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n        this.root.events.once(\"frameended\", () => {\r\n            text.markDirtyBounds();\r\n        });\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        const text = this._text;\r\n        if (text.get(\"populateText\")) {\r\n            text.markDirtyText();\r\n        }\r\n        const html = this.get(\"html\");\r\n        if (html && html !== \"\") {\r\n            this._updateHTMLContent();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n    /**\r\n     * Returns \"aria-label\" text with populated placeholders and formatting\r\n     * if `populateText` is set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getAccessibleText() {\r\n        return this._text._getAccessibleText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlContentHovered\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        const background = this._setDefaultFn(\"background\", () => {\r\n            return PointedRectangle.new(this._root, {});\r\n        });\r\n        background.set(\"themeTags\", [\"tooltip\", \"background\"]);\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n            if (htmlElement) {\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\r\n                    this._htmlContentHovered = true;\r\n                }));\r\n                this._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\r\n                    this._htmlContentHovered = false;\r\n                }));\r\n            }\r\n        }));\r\n        this.on(\"visible\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this.label.events.on(\"dataitemchanged\", (_ev) => {\r\n            this._handleReaderAnnouncement();\r\n        });\r\n        this._root._tooltips.push(this);\r\n    }\r\n    _handleReaderAnnouncement() {\r\n        if (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\r\n            this._root.readerAlert(this.label.getAccessibleText());\r\n        }\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    dispose() {\r\n        super.dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.get(\"background\")._markDirtyKey(\"width\");\r\n        }\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n        const labelAriaLabel = this.get(\"labelAriaLabel\");\r\n        if (labelAriaLabel != null) {\r\n            this.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            if (!this._htmlContentHovered) {\r\n                                target.unhover();\r\n                            }\r\n                        }\r\n                    })\r\n                ]);\r\n                this.label.onPrivate(\"htmlElement\", (htmlElement) => {\r\n                    if (this._keepHoverDp && htmlElement) {\r\n                        this._keepHoverDp.disposers.push($utils.addEventListener(htmlElement, \"pointerleave\", (ev) => {\r\n                            const outEvent = this.root._renderer.getEvent(ev);\r\n                            bg.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                originalEvent: outEvent.event,\r\n                                point: outEvent.point,\r\n                                simulated: false,\r\n                                target: bg\r\n                            });\r\n                        }));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n                background.set(\"width\", w);\r\n                background.set(\"height\", h);\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        if (this.get(\"forceLTR\") === true) {\r\n            formatted = \"‎\" + formatted;\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            const decimals = $utils.decimalPlaces(value);\r\n            if (decimals > 0) {\r\n                const d = Math.pow(10, details.decimals.passive);\r\n                value = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\r\n            }\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Date formatter class.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n * @important\r\n */\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats a source `Date` object into string format\r\n     * @param   source          inpout date\r\n     * @param   format          Output format\r\n     * @param   ignoreTimezone  Ignore timezone?\r\n     * @return                  Formatted date\r\n     */\r\n    format(source, format, ignoreTimezone = false) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        if (timezone && !this._root.utc && !ignoreTimezone) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info, ignoreTimezone);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info, ignoreTimezone = false) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc && !ignoreTimezone) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format) {\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // Are we parsing a timestamp?\r\n        if (format == \"x\") {\r\n            return new Date(parseInt(source));\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this._root.utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            let ints;\r\n            const unitValue = this._getUnitValue(unit);\r\n            if (i < (len - 1)) {\r\n                ints = Math.floor(tstamp / unitValue);\r\n            }\r\n            else {\r\n                ints = Math.round(tstamp / unitValue);\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * unitValue;\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport en from \"../../../locales/en\";\r\n;\r\n/**\r\n * Add localization functionality.\r\n */\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    /**\r\n     * Returns a prompt translation.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    /**\r\n     * Returns a prompt translation, including custom prompts.\r\n     *\r\n     * @param   prompt   Prompt to translate\r\n     * @param   locale   Target locale\r\n     * @param   ...rest  Parameters\r\n     * @return           Translation\r\n     */\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    /**\r\n     * Add a custom prompt to locale.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  prompt       Source prompt\r\n     * @param  translation  Tanslation\r\n     * @param  locale       Target locale\r\n     */\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    /**\r\n     * Add a batch of custom prompts.\r\n     *\r\n     * @since 5.3.3\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\r\n     * @param  translations  Translations\r\n     * @param  locale        Target locale\r\n     */\r\n    setTranslationsAny(translations, locale) {\r\n        $object.each(translations, (key, val) => {\r\n            this.setTranslationAny(key, val, locale);\r\n        });\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    /**\r\n     * Translates a btach of prompts.\r\n     *\r\n     * @param  list    Array of prompts to translate\r\n     * @param  locale  Target locale\r\n     * @return         Array of translations\r\n     */\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonDisabled: Color.fromHex(0xdadada),\r\n            primaryButtonTextDisabled: Color.fromHex(0xffffff),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        r(\"ZoomableContainer\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            wheelable: true,\r\n            pinchZoom: true,\r\n            maxZoomLevel: 32,\r\n            minZoomLevel: 1,\r\n            zoomStep: 2,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            animationDuration: 600,\r\n            maxPanOut: 0.4\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        r(\"GrainPattern\").setAll({\r\n            width: 200,\r\n            height: 200,\r\n            colors: [Color.fromHex(0x000000)],\r\n            size: 1,\r\n            horizontalGap: 0,\r\n            verticalGap: 0,\r\n            density: 1,\r\n            minOpacity: 0,\r\n            maxOpacity: 0.2\r\n        });\r\n        {\r\n            const rule = r(\"PatternSet\");\r\n            rule.setAll({\r\n                step: 1\r\n            });\r\n            setColor(rule, \"color\", ic, \"stroke\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"EditableLabel\").setAll({\r\n            editOn: \"click\",\r\n            //setStateOnChildren: true,\r\n            themeTags: [\"editablelabel\"],\r\n            multiLine: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\r\n            fillOpacity: 0,\r\n            fill: Color.fromHex(0x000000),\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusTR: 3,\r\n            strokeOpacity: 0,\r\n            stroke: Color.fromHex(0x000000)\r\n        });\r\n        {\r\n            r(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\r\n                strokeOpacity: 0.2,\r\n            });\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\",\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        r(\"Polygon\").setAll({\r\n            animationEasing: $ease.out($ease.cubic),\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        r(\"Button\").states.create(\"disabled\", {\r\n            forceInactive: true\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            rule.setAll({\r\n                forceInactive: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10,\r\n            isMeasured: false\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n                display.moveTo(0, -4);\r\n                display.lineTo(0, 4);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            draw: (display) => {\r\n                display.moveTo(-4, 0);\r\n                display.lineTo(4, 0);\r\n            }\r\n        });\r\n        r(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\r\n            x: p50,\r\n            y: p50,\r\n            svgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\r\n        });\r\n        r(\"Button\", [\"zoomtools\"]).setAll({\r\n            marginTop: 1,\r\n            marginBottom: 2\r\n        });\r\n        r(\"ZoomTools\").setAll({\r\n            x: p100,\r\n            centerX: p100,\r\n            y: p100,\r\n            centerY: p100,\r\n            paddingRight: 10,\r\n            paddingBottom: 10\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n/*function distributeId(id: number): number {\r\n    if (id === 1) {\r\n        return 0x000001;\r\n\r\n    } else {\r\n        // Finds the closest power of 2\r\n        const base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n\r\n        // Translates the id into an odd fraction index\r\n        const index = ((base - id) * 2) + 1;\r\n\r\n        // TODO is Math.round correct ?\r\n        return Math.round(0xffffff * (index / base));\r\n    }\r\n}*/\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        const target = $utils.getEventTarget(event);\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches), target);\r\n        }\r\n        else {\r\n            f([event], target);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * Aligns the coordinate to the pixel, so it renders crisp\r\n *\r\n * @ignore\r\n */\r\nfunction crisp(x) {\r\n    return Math.floor(x) + .5;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    subStatus(status) {\r\n        return {\r\n            inactive: (this.inactive == null ? status.inactive : this.inactive),\r\n            layer: this._layer || status.layer,\r\n        };\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._layer.dirty = true;\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive(status) {\r\n        return !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this._isInteractive(status);\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = crisp(tx);\r\n            ty = crisp(ty);\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(status) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const subStatus = this.subStatus(status);\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask(subStatus)) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            this._render(subStatus);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(status) {\r\n        if (this.exportable === false) {\r\n            status.layer.tainted = true;\r\n        }\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask(status) {\r\n        return this.interactiveChildren || super._isInteractiveMask(status);\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(status);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    colorizeGhost(context, forceColor) {\r\n        this.colorize(context, forceColor);\r\n    }\r\n    path(_context) { }\r\n    pathGhost(context) {\r\n        this.path(context);\r\n    }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginPath extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.beginPath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n    colorizeGhost(_context, _forceColor) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    beginPath() {\r\n        this._pushOp(new BeginPath());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        const layerDirty = status.layer.dirty;\r\n        const interactive = this._isInteractive(status);\r\n        if (layerDirty || interactive) {\r\n            const context = status.layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (interactive) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (interactive) {\r\n                    op.pathGhost(ghostContext);\r\n                    op.colorizeGhost(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(status, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(status);\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            status.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            status.layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            status.layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            status.layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive(status) && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(status) {\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(status);\r\n        }\r\n        if (this.textVisible) {\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(status);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (this._isInteractive(status)) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        const oversizedBehavior = this.style.oversizedBehavior || \"\";\r\n                        if ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\r\n                            // Measure actual width of the text so the line fits\r\n                            const metrics = this._measureText(chunk.text, context);\r\n                            chunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        }\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        context.save();\r\n                        context.beginPath();\r\n                        if (chunk.fill) {\r\n                            context.strokeStyle = chunk.fill.toCSS();\r\n                        }\r\n                        else if (this.style.fill && this.style.fill instanceof Color) {\r\n                            context.strokeStyle = this.style.fill.toCSS();\r\n                        }\r\n                        context.lineWidth = thickness * offset;\r\n                        context.moveTo(offsetX, y);\r\n                        context.lineTo(offsetX + chunk.width, y);\r\n                        context.stroke();\r\n                        context.restore();\r\n                    }\r\n                    if (interactive && this.interactive) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure({\r\n                inactive: this.inactive,\r\n                layer: this.getLayer(),\r\n            });\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this.textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this.textVisible = false;\r\n                        bounds.left = 0;\r\n                        bounds.top = 0;\r\n                        bounds.right = 0;\r\n                        bounds.bottom = 0;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale || this._originalScale == 1) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this.textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this.textVisible = false;\r\n                    bounds.left = 0;\r\n                    bounds.top = 0;\r\n                    bounds.right = 0;\r\n                    bounds.bottom = 0;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = rtl ? maxWidth : -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = rtl ? -maxWidth : maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this.textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this.textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\r\n                if ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(status);\r\n                break;\r\n            default:\r\n                super._render(status);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(status) {\r\n        if (this.textVisible) {\r\n            this._prerender(status);\r\n            const interactive = this._isInteractive(status);\r\n            const context = status.layer.context;\r\n            const layerDirty = status.layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(status);\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(status) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(status);\r\n            default:\r\n                return super._measure(status);\r\n        }\r\n    }\r\n    _measureCircular(status) {\r\n        const context = status.layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this.textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(status, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    let chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars = $utils.splitString(chunk.text);\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            //totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this.textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        if (rtl) {\r\n                            // @todo still needed?\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this.textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(status) {\r\n        super._render(status);\r\n        if (this.image) {\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                status.layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            if (status.layer.dirty) {\r\n                if (this.shadowColor) {\r\n                    status.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    status.layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    status.layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    status.layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                status.layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive(status)) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_realWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_realHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_calculatedHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.setAttribute(\"aria-hidden\", \"true\");\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    resetImageArray() {\r\n        this._ghostLayer.imageArray = undefined;\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\r\n    }\r\n    resize(realWidth, realHeight, calculatedWidth, calculatedHeight) {\r\n        this._realWidth = realWidth;\r\n        this._realHeight = realHeight;\r\n        this._calculatedWidth = calculatedWidth;\r\n        this._calculatedHeight = calculatedHeight;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                layer.dirty = true;\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = calculatedWidth + \"px\";\r\n        this.view.style.height = calculatedHeight + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        layer.view.className = \"am5-layer-\" + order;\r\n        if (layer.visible) {\r\n            this.resizeLayer(layer);\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render({\r\n            inactive: null,\r\n            layer: this.defaultLayer,\r\n        });\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            const { events, target, native } = this._lastPointerMoveEvent;\r\n            //this._mouseMoveThrottler.run();\r\n            $array.each(events, (event) => {\r\n                this._dispatchGlobalMousemove(event, target, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(-margin.left, -margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const x = originalEvent.clientX || 0;\r\n        const y = originalEvent.clientY || 0;\r\n        const widthScale = this._calculatedWidth / this._realWidth;\r\n        const heightScale = this._calculatedHeight / this._realHeight;\r\n        const originalPoint = {\r\n            x: x - bbox.left,\r\n            y: y - bbox.top,\r\n        };\r\n        const point = {\r\n            x: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\r\n            y: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox, target) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        if (!target || !this._layerDom.contains(target)) {\r\n            return;\r\n        }\r\n        const pixel = this._ghostLayer.getImageData(point, bbox);\r\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n            return false;\r\n        }\r\n        const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    getObjectAtPoint(point) {\r\n        const data = this._ghostLayer.getImageArray(point);\r\n        if (data[0] === 0 && data[1] === 0 && data[2] === 0) {\r\n            return undefined;\r\n        }\r\n        const colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\r\n        const hit = this._colorMap[colorId];\r\n        return hit;\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, originalTarget, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    removeHovering(graphics) {\r\n        this._hovering.delete(graphics);\r\n        if (graphics.cursorOverStyle) {\r\n            $utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle);\r\n        }\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent, originalTarget) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent, originalTarget) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev, target) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, target, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, target, native) => {\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, target, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, target, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, target, native) => {\r\n                        this._lastPointerMoveEvent = { event, target, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev, target);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev, target);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev, target) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev, target);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event, $utils.getEventTarget(event));\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        let canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\r\n        let canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > canvasWidth)) {\r\n            let minScale = options.minWidth / canvasWidth;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > canvasHeight)) {\r\n            let minScale = options.minHeight / canvasHeight;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < canvasWidth)) {\r\n            let maxScale = options.maxWidth / canvasWidth;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > canvasHeight)) {\r\n            let maxScale = options.maxHeight / canvasHeight;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = canvasWidth * scale / this.resolution;\r\n            canvasHeight = canvasHeight * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    let extraX = 0;\r\n                    let extraY = 0;\r\n                    if (layer.margin) {\r\n                        extraX += layer.margin.left || 0 + layer.margin.right || 0;\r\n                        extraY += layer.margin.top || 0 + layer.margin.bottom || 0;\r\n                    }\r\n                    layer.view.width = canvasWidth + extraX;\r\n                    layer.view.height = canvasHeight + extraY;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                let x = 0;\r\n                let y = 0;\r\n                if (layer.margin) {\r\n                    x = -(layer.margin.left || 0) * this.resolution;\r\n                    y = -(layer.margin.top || 0) * this.resolution;\r\n                }\r\n                context.drawImage(layer.view, x, y);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"imageArray\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        this._resolution = resolution;\r\n        canvasWidth += (this.margin.left + this.margin.right);\r\n        canvasHeight += (this.margin.top + this.margin.bottom);\r\n        // TODO this should take into account calculateSize\r\n        domWidth += (this.margin.left + this.margin.right);\r\n        domHeight += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    getImageArray(point) {\r\n        if (!this.imageArray) {\r\n            this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\r\n        }\r\n        const data = this.imageArray;\r\n        const x = Math.round(point.x * this._resolution);\r\n        const y = Math.round(point.y * this._resolution);\r\n        const i = (y * this._width + x) * 4;\r\n        return [data[i], data[i + 1], data[i + 2], data[i + 3]];\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(canvasWidth, canvasHeight, domWidth, domHeight, resolution) {\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.width != null) {\r\n            canvasWidth = this.width;\r\n            domWidth = this.width;\r\n        }\r\n        // TODO should this take into account calculateSize ?\r\n        if (this.height != null) {\r\n            canvasHeight = this.height;\r\n            domHeight = this.height;\r\n        }\r\n        if (this.margin) {\r\n            canvasWidth += (this.margin.left + this.margin.right);\r\n            canvasHeight += (this.margin.top + this.margin.bottom);\r\n            // TODO this should take into account calculateSize\r\n            domWidth += (this.margin.left + this.margin.right);\r\n            domHeight += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(canvasWidth * resolution);\r\n        this._height = Math.floor(canvasHeight * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = domWidth + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = domHeight + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { AnimationState } from \"./util/Animation\";\r\nimport { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * NOTE: Using time zone feature may noticeable affect performance of the\r\n         * chart, especially with large data sets, since every single date will need\r\n         * to be recalculated.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        Object.defineProperty(this, \"_paused\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.width = \"100%\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _getRealSize() {\r\n        return this.dom.getBoundingClientRect();\r\n    }\r\n    _getCalculatedSize(rect) {\r\n        if (this._settings.calculateSize) {\r\n            return this._settings.calculateSize(rect);\r\n        }\r\n        else {\r\n            return {\r\n                width: rect.width,\r\n                height: rect.height,\r\n            };\r\n        }\r\n    }\r\n    _init() {\r\n        const settings = this._settings;\r\n        if (settings.accessible !== false) {\r\n            if (settings.focusable) {\r\n                this._inner.setAttribute(\"focusable\", \"true\");\r\n                this._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\r\n            }\r\n            if (settings.ariaLabel) {\r\n                this._inner.setAttribute(\"aria-label\", settings.ariaLabel);\r\n            }\r\n            if (settings.role) {\r\n                this._inner.setAttribute(\"role\", settings.role);\r\n            }\r\n        }\r\n        const renderer = this._renderer;\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const width = Math.floor(size.width);\r\n        const height = Math.floor(size.height);\r\n        const realWidth = Math.floor(rect.width);\r\n        const realHeight = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, {\r\n            visible: true,\r\n            width: width,\r\n            height: height,\r\n        });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(realWidth, realHeight, width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            // readerAlertElement.style.zIndex = \"-100000\";\r\n            // readerAlertElement.style.opacity = \"0\";\r\n            // readerAlertElement.style.top = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.width = \"1px\";\r\n            readerAlertElement.style.height = \"1px\";\r\n            readerAlertElement.style.overflow = \"hidden\";\r\n            readerAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"graphics-document\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = true;\r\n                    }\r\n                    else if (eventKey == \"Tab\") {\r\n                        this._isShift = ev.shiftKey;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    const eventKey = $utils.getEventKey(ev);\r\n                    if (eventKey == \"Shift\") {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\r\n                    // Some screen readers convert ENTER (and some SPACE) press whil on\r\n                    // focused element to a \"click\" event, preventing actual \"keydown\"\r\n                    // event from firing. We're using this \"click\" event to still\r\n                    // generate internal click events.\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                        focusedSprite.events.dispatch(\"click\", {\r\n                            type: \"click\",\r\n                            originalEvent: downEvent.event,\r\n                            point: downEvent.point,\r\n                            simulated: true,\r\n                            target: focusedSprite\r\n                        });\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.key == \"Escape\") {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"Enter\":\r\n                            case \" \":\r\n                                if (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\r\n                                    return;\r\n                                }\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case \"ArrowLeft\":\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case \"ArrowRight\":\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case \"ArrowUp\":\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case \"ArrowDown\":\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                downEvent.point = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const eventKey = $utils.getEventKey(ev);\r\n                        switch (eventKey) {\r\n                            case \"ArrowLeft\":\r\n                            case \"ArrowRight\":\r\n                            case \"ArrowTop\":\r\n                            case \"ArrowDown\":\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter((item) => {\r\n                                        return item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\r\n                                    });\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const w = Math.floor(size.width);\r\n        const h = Math.floor(size.height);\r\n        if (w > 0 && h > 0) {\r\n            const realWidth = Math.floor(rect.width);\r\n            const realHeight = Math.floor(rect.height);\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(realWidth, realHeight, w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        let running = 0;\r\n        $array.keepIf(this._animations, (animation) => {\r\n            const state = animation._runAnimation(currentTime);\r\n            if (state === AnimationState.Stopped) {\r\n                return false;\r\n            }\r\n            else if (state === AnimationState.Playing) {\r\n                ++running;\r\n                return true;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n        this._isDirtyAnimation = false;\r\n        return running === 0;\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        this._positionHTMLElements();\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            const animationDone = this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._renderer.resetImageArray();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                animationDone &&\r\n                !this._isDirtyAnimation &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime, now) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                if (!this._paused) {\r\n                    if (now) {\r\n                        this._ticker;\r\n                    }\r\n                    else {\r\n                        rAF(this.fps, this._ticker);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow(timeout = 10000) {\r\n        if (!this.isDisposed()) {\r\n            const endTime = performance.now() + timeout;\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                if (currentTime >= endTime) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._dirty[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyParent(parent) {\r\n        this._isDirty = true;\r\n        this._isDirtyParents = true;\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._dirtyParents[parent.uid] = parent;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        this._isDirty = true;\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._dirtyBounds[entity.uid] = entity;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        this._isDirty = true;\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _addAnimation(animation) {\r\n        this._isDirtyAnimation = true;\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n        }\r\n        this._startTicker();\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this._getCalculatedSize(this._getRealSize()).height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group && item.getPrivate(\"focusable\") !== false) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        const ariaCurrent = target.get(\"ariaCurrent\");\r\n        if (ariaCurrent != null) {\r\n            focusElement.setAttribute(\"aria-current\", ariaCurrent);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-current\");\r\n        }\r\n        const ariaSelected = target.get(\"ariaSelected\");\r\n        if (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\r\n            focusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-selected\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n            focusElement.setAttribute(\"aria-hidden\", \"true\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true || target == undefined) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        let width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        let height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\r\n        let x = bounds.left - padding;\r\n        let y = bounds.top - padding;\r\n        if (width < 0) {\r\n            x += width;\r\n            width = Math.abs(width);\r\n        }\r\n        if (height < 0) {\r\n            y += height;\r\n            height = Math.abs(height);\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = y + \"px\";\r\n        focusElement.style.left = x + \"px\";\r\n        focusElement.style.width = (width + padding * 2) + \"px\";\r\n        focusElement.style.height = (height + padding * 2) + \"px\";\r\n    }\r\n    _getSpriteByFocusElement(target) {\r\n        let found;\r\n        $array.eachContinue(this._tabindexes, (item, _index) => {\r\n            if (item.getPrivate(\"focusElement\").dom === target) {\r\n                found = item;\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return found;\r\n    }\r\n    _handleFocus(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        //const focused = this._tabindexes[index];\r\n        const focused = this._getSpriteByFocusElement(ev.target);\r\n        if (!focused) {\r\n            return;\r\n        }\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        focusableElements[index].focus();\r\n    }\r\n    _handleBlur(ev) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n            tooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.width = \"1px\";\r\n        tooltipElement.style.height = \"1px\";\r\n        tooltipElement.style.overflow = \"hidden\";\r\n        tooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x - rect.left) * scaleWidth,\r\n            y: (point.y - rect.top) * scaleHeight,\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const rect = this._getRealSize();\r\n        const size = this._getCalculatedSize(rect);\r\n        const scaleWidth = size.width / rect.width;\r\n        const scaleHeight = size.height / rect.height;\r\n        return {\r\n            x: (point.x / scaleWidth) + rect.left,\r\n            y: (point.y / scaleHeight) + rect.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, target.get(\"interactive\", false));\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            $utils.setInteractive(htmlElement, true);\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        container.append(htmlElement);\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Init and reset scale / rotation\r\n            const scale = target.compositeScale() || 1;\r\n            const rotation = target.compositeRotation() || 0;\r\n            htmlElement.style.transform = \"\";\r\n            htmlElement.style.transformOrigin = \"\";\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            const bounds = target.globalBounds();\r\n            htmlElement.style.top = (bounds.top) + \"px\";\r\n            htmlElement.style.left = (bounds.left) + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.position = \"fixed\";\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                htmlElement.style.position = \"absolute\";\r\n                if (!width)\r\n                    w = bbox.width;\r\n                if (!height)\r\n                    h = bbox.height;\r\n                target._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n                target.setPrivate(\"minWidth\", w / scale);\r\n                target.setPrivate(\"minHeight\", h / scale);\r\n            }\r\n            else {\r\n                target.removePrivate(\"minWidth\");\r\n                target.removePrivate(\"minHeight\");\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n            // Deal with scale\r\n            if (scale != 1) {\r\n                htmlElement.style.transform += \"scale(\" + scale + \")\";\r\n            }\r\n            if (rotation != 0) {\r\n                htmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\r\n            }\r\n            if (htmlElement.style.transform != \"\") {\r\n                htmlElement.style.transformOrigin = target.get(\"centerX\", 0) + \"%  \" + target.get(\"centerY\", 0) + \"%\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n            target.removePrivate(\"htmlElement\");\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A tool that can process the data before it is being used in charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n * @important\r\n */\r\nexport class DataProcessor extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_checkDates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkNumbers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkEmpty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_checkDeep\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._checkFeatures();\r\n        this.on(\"dateFields\", () => this._checkFeatures());\r\n        this.on(\"dateFormat\", () => this._checkFeatures());\r\n        this.on(\"numericFields\", () => this._checkFeatures());\r\n        this.on(\"colorFields\", () => this._checkFeatures());\r\n        this.on(\"emptyAs\", () => this._checkFeatures());\r\n    }\r\n    _checkFeatures() {\r\n        if (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\r\n            this._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"numericFields\")) {\r\n            this._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"colorFields\")) {\r\n            this._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\").length > 0);\r\n        }\r\n        if (this.isDirty(\"emptyAs\")) {\r\n            this._checkEmpty = this.get(\"emptyAs\") != null;\r\n        }\r\n        this._checkDeepFeatures();\r\n    }\r\n    _checkDeepFeatures() {\r\n        const deepFields = [];\r\n        $array.each([\"dateFields\", \"numericFields\", \"colorFields\"], (where) => {\r\n            $array.each(this.get(where, []), (field) => {\r\n                const steps = field.split(\".\");\r\n                steps.pop();\r\n                while (steps.length > 0) {\r\n                    deepFields.push(steps.join(\".\"));\r\n                    steps.pop();\r\n                }\r\n            });\r\n        });\r\n        this._checkDeep = deepFields.length > 0;\r\n        this.setPrivate(\"deepFields\", deepFields);\r\n    }\r\n    /**\r\n     * Processess entire array of data.\r\n     *\r\n     * NOTE: calling this will modify original array!\r\n     */\r\n    processMany(data) {\r\n        if ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\r\n            $array.each(data, (row) => {\r\n                this.processRow(row);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Processes a row (object) of data.\r\n     *\r\n     * NOTE: calling this will modify values of the original object!\r\n     */\r\n    processRow(row, prefix = \"\") {\r\n        $object.each(row, (key, _value) => {\r\n            const lookupKey = prefix + key;\r\n            if (this._checkEmpty) {\r\n                row[key] = this._maybeToEmpty(row[key]);\r\n            }\r\n            if (this._checkNumbers) {\r\n                row[key] = this._maybeToNumber(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDates) {\r\n                row[key] = this._maybeToDate(lookupKey, row[key]);\r\n            }\r\n            if (this._checkColors) {\r\n                row[key] = this._maybeToColor(lookupKey, row[key]);\r\n            }\r\n            if (this._checkDeep && this.getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\r\n                this.processRow(row[key], lookupKey + \".\");\r\n            }\r\n        });\r\n    }\r\n    _maybeToNumber(field, value) {\r\n        if (this.get(\"numericFields\").indexOf(field) !== -1) {\r\n            return $type.toNumber(value);\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToDate(field, value) {\r\n        if (this.get(\"dateFields\").indexOf(field) !== -1) {\r\n            return this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToEmpty(value) {\r\n        if ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\r\n            return this.get(\"emptyAs\");\r\n        }\r\n        return value;\r\n    }\r\n    _maybeToColor(field, value) {\r\n        if (this.get(\"colorFields\").indexOf(field) !== -1) {\r\n            return Color.fromAny(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n//# sourceMappingURL=DataProcessor.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.isMeasured = true;\r\n        this.setPrivateRaw(\"trustBounds\", true);\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            const endDays = date.getUTCDate();\r\n            const startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\r\n            let month = date.getUTCMonth();\r\n            if (endDays > startDays) {\r\n                date.setUTCMonth(month + count, startDays);\r\n            }\r\n            else {\r\n                date.setUTCMonth(month + count);\r\n            }\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function roun(time, unit, count, root, firstTime) {\r\n    let firstDate;\r\n    if (firstTime != null) {\r\n        firstDate = new Date(firstTime);\r\n    }\r\n    return round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                if (count > 1) {\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"week\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"week\") / count);\r\n                        let duration = getDuration(\"week\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        let offsetDif = tzoffset - timeZoneOffset;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += offsetDif;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = offsetDif;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newTimeZoneOffset = date.getTimezoneOffset();\r\n        let newTzoffset = timezone.offsetUTC(date);\r\n        let newDiff = newTzoffset - newTimeZoneOffset;\r\n        if (newDiff != offsetDif) {\r\n            date.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        r(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"minor\"]).setAll({\r\n            fontSize: \"0.6em\"\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                forceInactive: true,\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                role: \"slider\",\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"minor\"]);\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.07,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // AXIS RANGE GRIP\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                strokeWidth: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                interactive: false,\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(2, 0.5);\r\n                    display.lineTo(2, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"rangegrip\"]).setAll({\r\n            draggable: true,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\",\r\n            centerX: p50\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n            centerY: p100\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n                const patterns = this.get(\"patterns\");\r\n                if (patterns) {\r\n                    patterns.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n        this.setPrivate(\"trustBounds\", true);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map",";\r\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.hide(0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"plotbackground\", \"xy\", \"background\"]\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        series._unstack();\r\n        if (series._posXDp) {\r\n            series._posXDp.dispose();\r\n        }\r\n        if (series._posYDp) {\r\n            series._posYDp.dispose();\r\n        }\r\n        series.set(\"baseAxis\", undefined);\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(event.point);\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                    let newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\r\n                    let newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                const wheelEvent = event.originalEvent;\r\n                if ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\r\n                    this.handleWheel(event);\r\n                }\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const originalEvent = event.originalEvent;\r\n        if (originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(event.point);\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const pointerId = originalEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                if (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event.originalEvent;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = event.point;\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(event.point);\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    series.setRaw(\"tooltipDataItem\", closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateCursor();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\r\n                        this.xAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\r\n                        this.yAxes.each((axis) => {\r\n                            if (axis.get(\"zoomable\")) {\r\n                                this._handleAxisSelection(axis);\r\n                            }\r\n                        });\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position, false) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        const xAxis = series.get(\"xAxis\");\r\n        const yAxis = series.get(\"yAxis\");\r\n        $array.move(xAxis.series, series);\r\n        $array.move(yAxis.series, series);\r\n        series._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        series._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\r\n            series._fixPosition();\r\n        }));\r\n        if (!series.get(\"baseAxis\")) {\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                series.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                series.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        if (series.get(\"stacked\")) {\r\n            series._markDirtyKey(\"stacked\");\r\n            $array.each(series.dataItems, (dataItem) => {\r\n                dataItem.set(\"stackToItemY\", undefined);\r\n                dataItem.set(\"stackToItemX\", undefined);\r\n            });\r\n        }\r\n        series._markDirtyAxes();\r\n        yAxis.markDirtyExtremes();\r\n        xAxis.markDirtyExtremes();\r\n        xAxis._seriesAdded = true;\r\n        yAxis._seriesAdded = true;\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n        const patternSet = this.get(\"patterns\");\r\n        if (patternSet) {\r\n            if (series.get(\"fillPattern\") == null) {\r\n                const pattern = patternSet.next();\r\n                series._setSoft(\"fillPattern\", pattern);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\r\n        const positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        var cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            this.addDisposer(axis.on(\"start\", () => {\r\n                this._updateCursor();\r\n            }));\r\n            this.addDisposer(axis.on(\"end\", () => {\r\n                this._updateCursor();\r\n            }));\r\n        }\r\n    }\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        const hh = this.height();\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                if (!series.isHidden()) {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                            if (maxTooltipDistanceBy == \"x\") {\r\n                                distance = Math.abs(movePoint.x - point.x);\r\n                            }\r\n                            else if (maxTooltipDistanceBy == \"y\") {\r\n                                distance = Math.abs(movePoint.y - point.y);\r\n                            }\r\n                            if (distance < minDistance) {\r\n                                minDistance = distance;\r\n                                closest = series;\r\n                                closestPoint = point;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip && !tooltip.get(\"forceHidden\")) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point && closestPoint) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        // Explicitly disposing cursor to avoid memory leak of cursor adding\r\n        // keyboard events after parent chart has been disposed\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                if (dataItem.bullets && dataItem.bullets.length == 0) {\r\n                    dataItem.bullets = undefined;\r\n                }\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * Creates a new data item and processes it.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    makeDataItem(data, dataContext) {\r\n        let dataItem = new DataItem(this, dataContext, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * Adds new explicit data item to series.\r\n     *\r\n     * @param   data         Data item settings\r\n     * @param   dataContext  Data context\r\n     * @return               New data item\r\n     */\r\n    pushDataItem(data, dataContext) {\r\n        const dataItem = this.makeDataItem(data, dataContext);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Array of minor data items.\r\n         */\r\n        Object.defineProperty(this, \"minorDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesAdded\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\r\n        this.ghostLabel.events.disable();\r\n    }\r\n    _updateFinals(_start, _end) {\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        if (this.get(\"zoomable\", true)) {\r\n            this._updateFinals(start, end);\r\n            if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n                let sAnimation = this._sAnimation;\r\n                let eAnimation = this._eAnimation;\r\n                let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n                if (start < -maxDeviation) {\r\n                    start = -maxDeviation;\r\n                }\r\n                if (end > 1 + maxDeviation) {\r\n                    end = 1 + maxDeviation;\r\n                }\r\n                if (start > end) {\r\n                    [start, end] = [end, start];\r\n                }\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (!priority) {\r\n                    priority = \"end\";\r\n                }\r\n                let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n                let maxZoomFactorReal = maxZoomFactor;\r\n                if (end === 1 && start !== 0) {\r\n                    if (start < this.get(\"start\", 0)) {\r\n                        priority = \"start\";\r\n                    }\r\n                    else {\r\n                        priority = \"end\";\r\n                    }\r\n                }\r\n                if (start === 0 && end !== 1) {\r\n                    if (end > this.get(\"end\", 1)) {\r\n                        priority = \"end\";\r\n                    }\r\n                    else {\r\n                        priority = \"start\";\r\n                    }\r\n                }\r\n                let minZoomCount = this.get(\"minZoomCount\", 0);\r\n                let maxZoomCount = this.get(\"maxZoomCount\", Infinity);\r\n                if ($type.isNumber(minZoomCount)) {\r\n                    maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n                }\r\n                let minZoomFactor = 1;\r\n                if ($type.isNumber(maxZoomCount)) {\r\n                    minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n                }\r\n                // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n                if (priority === \"start\") {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            end = start + 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // add to the end\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                    //unless end is > 0\r\n                    if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                        //end = 1;\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                // most likely we are dragging right, so we modify left\r\n                else {\r\n                    if (maxZoomCount > 0) {\r\n                        // add to the end\r\n                        if (1 / (end - start) < minZoomFactor) {\r\n                            start = end - 1 / minZoomFactor;\r\n                        }\r\n                    }\r\n                    // remove from start\r\n                    if (1 / (end - start) > maxZoomFactor) {\r\n                        start = end - 1 / maxZoomFactor;\r\n                    }\r\n                    if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                        //start = 0;\r\n                        end = start + 1 / maxZoomFactor;\r\n                    }\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                    const chart = this.chart;\r\n                    if (chart) {\r\n                        chart._handleAxisSelection(this, true);\r\n                    }\r\n                }\r\n                if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                    return;\r\n                }\r\n                if (duration > 0) {\r\n                    let easing = this.get(\"interpolationEasing\");\r\n                    let sAnimation, eAnimation;\r\n                    if (this.get(\"start\") != start) {\r\n                        sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                    }\r\n                    if (this.get(\"end\") != end) {\r\n                        eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                    }\r\n                    this._sAnimation = sAnimation;\r\n                    this._eAnimation = eAnimation;\r\n                    if (sAnimation) {\r\n                        return sAnimation;\r\n                    }\r\n                    else if (eAnimation) {\r\n                        return eAnimation;\r\n                    }\r\n                }\r\n                else {\r\n                    this.set(\"start\", start);\r\n                    this.set(\"end\", end);\r\n                }\r\n            }\r\n            else {\r\n                if (this._sAnimation) {\r\n                    this._sAnimation.stop();\r\n                }\r\n                if (this._eAnimation) {\r\n                    this._eAnimation.stop();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            const chart = this.chart;\r\n            if (chart) {\r\n                chart._updateCursor();\r\n            }\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, true);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleFHDataItem(dataItem, false);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleFHDataItem(dataItem, forceHidden) {\r\n        const fh = \"forceHidden\";\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.set(fh, forceHidden);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.set(fh, forceHidden);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.set(fh, forceHidden);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.set(fh, forceHidden);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.set(fh, forceHidden);\r\n            }\r\n        }\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        const v = \"visible\";\r\n        if (label) {\r\n            label.setPrivate(v, visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(v, visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(v, visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(v, visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(v, visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags, minor) {\r\n        var _a, _b, _c;\r\n        const renderer = this.get(\"renderer\");\r\n        let m = \"minor\";\r\n        const label = dataItem.get(\"label\");\r\n        if (!label) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = label.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_a = label.parent) === null || _a === void 0 ? void 0 : _a.children.removeValue(label);\r\n                renderer.makeLabel(dataItem, tags);\r\n                label.dispose();\r\n                renderer.labels.removeValue(label);\r\n            }\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (!grid) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        else {\r\n            let themeTags = grid.get(\"themeTags\");\r\n            let remove = false;\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_b = grid.parent) === null || _b === void 0 ? void 0 : _b.children.removeValue(grid);\r\n                renderer.makeGrid(dataItem, tags);\r\n                grid.dispose();\r\n                renderer.grid.removeValue(grid);\r\n            }\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (!tick) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        else {\r\n            let remove = false;\r\n            let themeTags = tick.get(\"themeTags\");\r\n            if (minor) {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) == -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            else {\r\n                if ((themeTags === null || themeTags === void 0 ? void 0 : themeTags.indexOf(m)) != -1) {\r\n                    remove = true;\r\n                }\r\n            }\r\n            if (remove) {\r\n                (_c = tick.parent) === null || _c === void 0 ? void 0 : _c.children.removeValue(tick);\r\n                renderer.makeTick(dataItem, tags);\r\n                tick.dispose();\r\n                renderer.ticks.removeValue(tick);\r\n            }\r\n        }\r\n        if (!minor && !dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n        this._seriesAdded = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        this.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = Math.ceil(bounds.right - bounds.left);\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = Math.ceil(bounds.right - bounds.left);\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                        series._settings.tooltipDataItem = dataItem;\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                        series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (this.get(\"snapTooltip\")) {\r\n                position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n            }\r\n            this.setPrivateRaw(\"tooltipPosition\", position);\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (!$type.isNaN(position)) {\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Converts relative position of the axis to a global position taking current\r\n     * zoom into account (opposite to what `toAxisPosition` does).\r\n     *\r\n     * @since 5.4.2\r\n     * @param position Position\r\n     * @return Global position\r\n     */\r\n    toGlobalPosition(position) {\r\n        return this.get(\"renderer\").toGlobalPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dseHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minRealLog\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        let someDirty = false;\r\n        if (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            someDirty = true;\r\n            this.ghostLabel.set(\"text\", \"\");\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\r\n            this._getMinMax();\r\n            this._dirtyExtremes = false;\r\n        }\r\n        this._handleSizeDirty();\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            const chart = this.chart;\r\n            let getMM = false;\r\n            // #1563\r\n            if (chart) {\r\n                const letter = this.get(\"renderer\").getPrivate(\"letter\");\r\n                if (letter == \"Y\") {\r\n                    chart.xAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n                else if (letter == \"X\") {\r\n                    chart.yAxes.each((axis) => {\r\n                        if (axis.className != \"ValueAxis\") {\r\n                            getMM = true;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (getMM) {\r\n                this._getSelectionMinMax();\r\n            }\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _handleSizeDirty() {\r\n        if (this._sizeDirty && !this._dseHandled) {\r\n            this._dirtySelectionExtremes = true;\r\n            this._dseHandled = true;\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._dseHandled = false;\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        if ($type.isNumber(this._minRealLog)) {\r\n                            minLog = this._minRealLog;\r\n                        }\r\n                        else {\r\n                            minLog = Math.pow(10, -50);\r\n                        }\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\r\n                }\r\n            }\r\n            /// minor grid\r\n            const renderer = this.get(\"renderer\");\r\n            const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n            const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n            let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n            const stepAdjusted = Math.round(step / stepPower);\r\n            let minorGridCount = 2;\r\n            if ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\r\n                minorGridCount = 5;\r\n            }\r\n            if ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\r\n                minorGridCount = 10;\r\n            }\r\n            let minorStep = step / minorGridCount;\r\n            // end of minor grid\r\n            let i = 0;\r\n            let m = 0;\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                this._toggleDataItem(dataItem, true);\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                let nextValue = value;\r\n                if (!logarithmic) {\r\n                    nextValue += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        nextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\r\n                    }\r\n                    else {\r\n                        nextValue += step;\r\n                    }\r\n                }\r\n                // minor grid\r\n                if (minorGridEnabled) {\r\n                    let minorValue = value + minorStep;\r\n                    if (logarithmic) {\r\n                        if (differencePower > 2) {\r\n                            let minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\r\n                            minorStep = minorMinMaxStep.step;\r\n                        }\r\n                        minorValue = value + minorStep;\r\n                    }\r\n                    while (minorValue < nextValue - step * 0.00000000001) {\r\n                        let minorDataItem;\r\n                        if (this.minorDataItems.length < m + 1) {\r\n                            minorDataItem = new DataItem(this, undefined, {});\r\n                            this.minorDataItems.push(minorDataItem);\r\n                            this.processDataItem(minorDataItem);\r\n                        }\r\n                        else {\r\n                            minorDataItem = this.minorDataItems[m];\r\n                        }\r\n                        this._createAssets(minorDataItem, [\"minor\"], true);\r\n                        this._toggleDataItem(minorDataItem, true);\r\n                        minorDataItem.setRaw(\"value\", minorValue);\r\n                        const minorLabel = minorDataItem.get(\"label\");\r\n                        if (minorLabel) {\r\n                            if (minorLabelsEnabled) {\r\n                                minorLabel.set(\"text\", this._formatText(minorValue));\r\n                            }\r\n                            else {\r\n                                minorLabel.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                        this._prepareDataItem(minorDataItem);\r\n                        minorValue += minorStep;\r\n                        m++;\r\n                    }\r\n                }\r\n                value = nextValue;\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1 && !logarithmic) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this._toggleDataItem(this.dataItems[j], false);\r\n            }\r\n            for (let j = m; j < this.minorDataItems.length; j++) {\r\n                this._toggleDataItem(this.minorDataItems[j], false);\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        let labelEndPosition = endPosition;\r\n        let labelEndValue = dataItem.get(\"labelEndValue\");\r\n        if (labelEndValue != null) {\r\n            labelEndPosition = this.valueToPosition(labelEndValue);\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minX = series.getPrivate(\"minX\");\r\n                            let maxX = series.getPrivate(\"maxX\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minX = undefined;\r\n                                maxX = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", minX);\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", maxX);\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            let minY = series.getPrivate(\"minY\");\r\n                            let maxY = series.getPrivate(\"maxY\");\r\n                            // solves #90085\r\n                            if (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\r\n                                minY = undefined;\r\n                                maxY = undefined;\r\n                            }\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", minY);\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", maxY);\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                let smin = selectionMin;\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                if (selectionMin < min) {\r\n                    let d = smin - min;\r\n                    if (d == 0) {\r\n                        d = this._deltaMinMax;\r\n                    }\r\n                    selectionMin = smin - d;\r\n                    selectionMax = smin + d;\r\n                    strictMinMax = true;\r\n                }\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            let delta = selectionMax - selectionMin;\r\n            selectionMin -= delta * extraMin;\r\n            selectionMax += delta * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                if (minMaxStep.min < min) {\r\n                    minMaxStep.min = min;\r\n                }\r\n                if (minMaxStep.max > max) {\r\n                    minMaxStep.max = max;\r\n                }\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = selectionMinReal;\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = selectionMaxReal;\r\n                }\r\n                if (selectionMax - selectionMin <= 0.00000001) {\r\n                    selectionMin -= this._deltaMinMax;\r\n                    selectionMax += this._deltaMinMax;\r\n                }\r\n                let delta = selectionMax - selectionMin;\r\n                selectionMin -= delta * extraMin;\r\n                selectionMax += delta * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            this.setPrivate(\"minFinal\", undefined);\r\n            this.setPrivate(\"maxFinal\", undefined);\r\n            return;\r\n        }\r\n        if (min > max) {\r\n            [min, max] = [max, min];\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        this._minRealLog = min;\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            let delta = max - min;\r\n            min -= delta * extraMin;\r\n            max += delta * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n                if (step == 0) {\r\n                    step = 1;\r\n                }\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position, _adjustPosition) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.getPrivate(\"step\", 1) / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        let value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\r\n        value += this.getPrivate(\"step\", 1) * count;\r\n        value = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\r\n        return this.toGlobalPosition(this.valueToPosition(value));\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nexport class DateAxis extends ValueAxis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesDataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_baseDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_intervalMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_intervalMin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        super._afterNew();\r\n        this._setBaseInterval(this.get(\"baseInterval\"));\r\n        this.on(\"baseInterval\", () => {\r\n            this._setBaseInterval(this.get(\"baseInterval\"));\r\n        });\r\n    }\r\n    _setBaseInterval(interval) {\r\n        this.setPrivateRaw(\"baseInterval\", interval);\r\n        this._baseDuration = $time.getIntervalDuration(interval);\r\n    }\r\n    _fixZoomFactor() {\r\n        const maxZoomFactor = this.get(\"maxZoomFactor\");\r\n        if (maxZoomFactor != null && maxZoomFactor != Infinity) {\r\n            this.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\r\n        }\r\n        else {\r\n            this.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\r\n        }\r\n    }\r\n    _groupData() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (($type.isNumber(min) && $type.isNumber(max))) {\r\n            this._fixZoomFactor();\r\n            const groupInterval = this.getPrivate(\"groupInterval\");\r\n            if (groupInterval) {\r\n                this._setBaseInterval(groupInterval);\r\n            }\r\n            else {\r\n                this._setBaseInterval(this.get(\"baseInterval\"));\r\n            }\r\n            if (this.isDirty(\"groupInterval\")) {\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (groupInterval) {\r\n                    this.setRaw(\"groupIntervals\", [groupInterval]);\r\n                    this._handleRangeChange();\r\n                }\r\n            }\r\n            if (this.isDirty(\"groupData\")) {\r\n                if (!this._dataGrouped) {\r\n                    if (this.get(\"groupData\")) {\r\n                        $array.each(this.series, (series) => {\r\n                            this._groupSeriesData(series);\r\n                        });\r\n                        this._handleRangeChange();\r\n                    }\r\n                    else {\r\n                        let baseInterval = this.get(\"baseInterval\");\r\n                        let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n                        $array.each(this.series, (series) => {\r\n                            series.setDataSet(mainDataSetId);\r\n                            series.resetGrouping();\r\n                        });\r\n                        this._setBaseInterval(baseInterval);\r\n                        this.setPrivateRaw(\"groupInterval\", undefined);\r\n                        this.markDirtyExtremes();\r\n                    }\r\n                    this._dataGrouped = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _groupSeriesData(series) {\r\n        if (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\r\n            this._dataGrouped = true; // helps to avoid double grouping\r\n            this._seriesDataGrouped = true;\r\n            // make array of intervals which will be used;\r\n            let intervals = [];\r\n            let baseDuration = this.baseMainDuration();\r\n            let groupIntervals = this.get(\"groupIntervals\");\r\n            if (groupIntervals) { }\r\n            $array.each(groupIntervals, (interval) => {\r\n                let intervalDuration = $time.getIntervalDuration(interval);\r\n                if (intervalDuration > baseDuration) {\r\n                    intervals.push(interval);\r\n                }\r\n            });\r\n            series._dataSets = {};\r\n            const key = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\r\n            let fields;\r\n            const baseAxis = series.get(\"baseAxis\");\r\n            if (series.get(\"xAxis\") === baseAxis) {\r\n                fields = series._valueYFields;\r\n            }\r\n            else if (series.get(\"yAxis\") === baseAxis) {\r\n                fields = series._valueXFields;\r\n            }\r\n            let dataItems = series._mainDataItems;\r\n            let baseInterval = this.get(\"baseInterval\");\r\n            let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n            series._dataSets[mainDataSetId] = dataItems;\r\n            const groupCallback = series.get(\"groupDataCallback\");\r\n            let groupOriginals = series.get(\"groupDataWithOriginals\", false);\r\n            if (groupCallback) {\r\n                groupOriginals = true;\r\n            }\r\n            $array.each(intervals, (interval) => {\r\n                let previousTime = -Infinity;\r\n                let dataSetId = interval.timeUnit + interval.count;\r\n                series._dataSets[dataSetId] = [];\r\n                let newDataItem;\r\n                let sum = {};\r\n                let count = {};\r\n                let groupFieldValues = {};\r\n                let workingFields = {};\r\n                $array.each(fields, (field) => {\r\n                    sum[field] = 0;\r\n                    count[field] = 0;\r\n                    groupFieldValues[field] = series.get((field + \"Grouped\"));\r\n                    workingFields[field] = field + \"Working\";\r\n                });\r\n                let intervalDuration = $time.getDuration(interval.timeUnit);\r\n                let firstItem = dataItems[0];\r\n                let firstTime;\r\n                if (firstItem) {\r\n                    firstTime = dataItems[0].get(key);\r\n                }\r\n                let prevNewDataItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    let time = dataItem.get(key);\r\n                    //let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\r\n                    let roundedTime = $time.roun(time, interval.timeUnit, interval.count, this._root, firstTime);\r\n                    let dataContext;\r\n                    if (previousTime < roundedTime - intervalDuration / 24) {\r\n                        dataContext = $object.copy(dataItem.dataContext);\r\n                        newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n                        newDataItem.setRaw(key, roundedTime);\r\n                        series._dataSets[dataSetId].push(newDataItem);\r\n                        $array.each(fields, (field) => {\r\n                            let value = dataItem.get(field);\r\n                            if ($type.isNumber(value)) {\r\n                                newDataItem.setRaw(field, value);\r\n                                newDataItem.setRaw(workingFields[field], value);\r\n                                count[field] = 1;\r\n                                sum[field] = value;\r\n                            }\r\n                            else {\r\n                                sum[field] = 0;\r\n                                count[field] = 0;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.set(\"originals\", [dataItem]);\r\n                        }\r\n                        if (groupCallback && prevNewDataItem) {\r\n                            groupCallback(prevNewDataItem, interval);\r\n                        }\r\n                        prevNewDataItem = newDataItem;\r\n                    }\r\n                    else {\r\n                        $array.each(fields, (field) => {\r\n                            let groupKey = groupFieldValues[field];\r\n                            let value = dataItem.get(field);\r\n                            if (value != null) {\r\n                                let currentValue = newDataItem.get(field);\r\n                                switch (groupKey) {\r\n                                    case \"close\":\r\n                                        newDataItem.setRaw(field, value);\r\n                                        break;\r\n                                    case \"sum\":\r\n                                        newDataItem.setRaw(field, currentValue + value);\r\n                                        break;\r\n                                    case \"open\":\r\n                                        break;\r\n                                    case \"low\":\r\n                                        if (value < currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"high\":\r\n                                        if (value > currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"average\":\r\n                                        count[field]++;\r\n                                        sum[field] += value;\r\n                                        let average = sum[field] / count[field];\r\n                                        newDataItem.setRaw(field, average);\r\n                                        break;\r\n                                    case \"extreme\":\r\n                                        if (Math.abs(value) > Math.abs(currentValue)) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                newDataItem.setRaw(workingFields[field], newDataItem.get(field));\r\n                                let dataContext = $object.copy(dataItem.dataContext);\r\n                                dataContext[key] = roundedTime;\r\n                                newDataItem.dataContext = dataContext;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.get(\"originals\").push(dataItem);\r\n                        }\r\n                    }\r\n                    previousTime = roundedTime;\r\n                });\r\n                if (groupCallback && prevNewDataItem) {\r\n                    groupCallback(prevNewDataItem, interval);\r\n                }\r\n            });\r\n            if (series._dataSetId) {\r\n                series.setDataSet(series._dataSetId);\r\n            }\r\n            this.markDirtySize();\r\n            // solves problem if new series was added\r\n            if (this._seriesAdded) {\r\n                this._root.events.once(\"frameended\", () => {\r\n                    this.markDirtySize();\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._groupingCalculated = false;\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * Returns a time interval axis would group data to for a specified duration.\r\n     *\r\n     * @since 5.2.1\r\n     */\r\n    getGroupInterval(duration) {\r\n        let baseInterval = this.get(\"baseInterval\");\r\n        let groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\"));\r\n        if ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\r\n            groupInterval = Object.assign({}, baseInterval);\r\n        }\r\n        return groupInterval;\r\n    }\r\n    /**\r\n     * Return `max` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Max\r\n     */\r\n    getIntervalMax(interval) {\r\n        return this._intervalMax[interval.timeUnit + interval.count];\r\n    }\r\n    /**\r\n     * Return `min` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Min\r\n     */\r\n    getIntervalMin(interval) {\r\n        return this._intervalMin[interval.timeUnit + interval.count];\r\n    }\r\n    _handleRangeChange() {\r\n        super._handleRangeChange();\r\n        let selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n        let selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n        if ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\r\n            if (this.get(\"endLocation\") == 0) {\r\n                selectionMax += 1;\r\n            }\r\n            if (this.get(\"groupData\") && !this._groupingCalculated) {\r\n                this._groupingCalculated = true;\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                let current = this.getPrivate(\"groupInterval\");\r\n                let modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\r\n                if (current) {\r\n                    let duration = $time.getIntervalDuration(current);\r\n                    modifiedDifference = Math.ceil(modifiedDifference / duration) * duration;\r\n                }\r\n                if (!groupInterval) {\r\n                    groupInterval = this.getGroupInterval(modifiedDifference);\r\n                }\r\n                if (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\r\n                    this._seriesDataGrouped = false;\r\n                    this.setPrivateRaw(\"groupInterval\", groupInterval);\r\n                    this._setBaseInterval(groupInterval);\r\n                    let newId = groupInterval.timeUnit + groupInterval.count;\r\n                    $array.each(this.series, (series) => {\r\n                        if (series.get(\"baseAxis\") === this) {\r\n                            series.setDataSet(newId);\r\n                        }\r\n                    });\r\n                    this.markDirtyExtremes();\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this._root.events.once(\"frameended\", () => {\r\n                            const type = \"groupintervalchanged\";\r\n                            if (this.events.isEnabled(type)) {\r\n                                this.events.dispatch(type, { type: type, target: this });\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n                    const start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMin);\r\n                    });\r\n                    let startIndex = start.index;\r\n                    if (startIndex > 0) {\r\n                        startIndex -= 1;\r\n                    }\r\n                    selectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\r\n                    const end = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMax);\r\n                    });\r\n                    let endIndex = end.index;\r\n                    let endIndex2 = endIndex;\r\n                    if (endIndex2 > 1) {\r\n                        endIndex2--;\r\n                    }\r\n                    const firstDataItem = series.dataItems[startIndex];\r\n                    const lastDataItem = series.dataItems[endIndex2];\r\n                    let lastDate;\r\n                    let firstDate;\r\n                    if (firstDataItem) {\r\n                        firstDate = firstDataItem.get(fieldName);\r\n                    }\r\n                    if (lastDataItem) {\r\n                        lastDate = lastDataItem.get(fieldName);\r\n                    }\r\n                    let outOfSelection = false;\r\n                    if (lastDate != null && firstDate != null) {\r\n                        if (lastDate < selectionMin || firstDate > selectionMax) {\r\n                            outOfSelection = true;\r\n                        }\r\n                    }\r\n                    series.setPrivate(\"outOfSelection\", outOfSelection);\r\n                    series.setPrivate(\"startIndex\", startIndex);\r\n                    series.setPrivate(\"adjustedStartIndex\", series._adjustStartIndex(startIndex));\r\n                    series.setPrivate(\"endIndex\", endIndex);\r\n                    this.root.events.once(\"frameended\", () => {\r\n                        series._markDirtyPrivateKey(\"adjustedStartIndex\");\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _adjustMinMax(min, max, gridCount, _strictMode) {\r\n        return { min: min, max: max, step: (max - min) / gridCount };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    intervalDuration() {\r\n        return this._intervalDuration;\r\n    }\r\n    _saveMinMax(min, max) {\r\n        let groupInterval = this.getPrivate(\"groupInterval\");\r\n        if (!groupInterval) {\r\n            groupInterval = this.get(\"baseInterval\");\r\n        }\r\n        let id = groupInterval.timeUnit + groupInterval.count;\r\n        this._intervalMin[id] = min;\r\n        this._intervalMax[id] = max;\r\n    }\r\n    _getM(timeUnit) {\r\n        if (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\r\n            return 1.05;\r\n        }\r\n        return 1.01;\r\n    }\r\n    _getMinorInterval(interval) {\r\n        var _a;\r\n        let minorGridInterval;\r\n        let count = interval.count;\r\n        let timeUnit = interval.timeUnit;\r\n        if (count > 1) {\r\n            if (count == 10) {\r\n                count = 5;\r\n            }\r\n            else if (count == 15) {\r\n                count = 5;\r\n            }\r\n            else if (count == 12) {\r\n                count = 2;\r\n            }\r\n            else if (count == 6) {\r\n                count = 1;\r\n            }\r\n            else if (count == 30) {\r\n                count = 10;\r\n            }\r\n            else if (count < 10) {\r\n                count = 1;\r\n            }\r\n            minorGridInterval = { timeUnit: timeUnit, count: count };\r\n        }\r\n        if (timeUnit == \"week\") {\r\n            if (((_a = this.getPrivate(\"baseInterval\")) === null || _a === void 0 ? void 0 : _a.timeUnit) != \"week\") {\r\n                minorGridInterval = { timeUnit: \"day\", count: 1 };\r\n            }\r\n        }\r\n        return minorGridInterval;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const root = this._root;\r\n            const selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n            const selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n            const renderer = this.get(\"renderer\");\r\n            const baseInterval = this.getPrivate(\"baseInterval\");\r\n            let value = selectionMin;\r\n            let i = 0;\r\n            const intervals = this.get(\"gridIntervals\");\r\n            let gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\r\n            if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                gridInterval = Object.assign({}, baseInterval);\r\n            }\r\n            const intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            this._intervalDuration = intervalDuration;\r\n            const nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n            const utc = root.utc;\r\n            const timezone = root.timezone;\r\n            //value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\r\n            value = $time.roun(selectionMin - intervalDuration, gridInterval.timeUnit, gridInterval.count, root, min);\r\n            let previousValue = value - intervalDuration;\r\n            let format;\r\n            const formats = this.get(\"dateFormats\");\r\n            this.setPrivateRaw(\"gridInterval\", gridInterval);\r\n            const minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\r\n            const minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\r\n            let minorGridInterval;\r\n            let minorDuration = 0;\r\n            if (minorGridEnabled) {\r\n                minorGridInterval = this._getMinorInterval(gridInterval);\r\n                minorDuration = $time.getIntervalDuration(minorGridInterval);\r\n            }\r\n            let m = 0;\r\n            while (value < selectionMax + intervalDuration) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                this._toggleDataItem(dataItem, true);\r\n                dataItem.setRaw(\"value\", value);\r\n                dataItem.setRaw(\"labelEndValue\", undefined);\r\n                let endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n                //endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                endValue = $time.roun(endValue, gridInterval.timeUnit, 1, root);\r\n                dataItem.setRaw(\"endValue\", endValue);\r\n                let date = new Date(value);\r\n                format = formats[gridInterval.timeUnit];\r\n                if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                    if (gridInterval.timeUnit != \"year\") {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n                            format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                        }\r\n                    }\r\n                }\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", root.dateFormatter.format(date, format));\r\n                }\r\n                let count = gridInterval.count;\r\n                // so that labels of week would always be at the beginning of the grid\r\n                if (gridInterval.timeUnit == \"week\") {\r\n                    dataItem.setRaw(\"labelEndValue\", value);\r\n                }\r\n                if (minorGridEnabled) {\r\n                    count = 1;\r\n                    let timeUnit = gridInterval.timeUnit;\r\n                    if (timeUnit == \"week\") {\r\n                        timeUnit = \"day\";\r\n                    }\r\n                    let labelEndValue = value + $time.getDuration(timeUnit, this._getM(timeUnit));\r\n                    //labelEndValue = $time.round(new Date(labelEndValue), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                    labelEndValue = $time.roun(labelEndValue, timeUnit, 1, root);\r\n                    dataItem.setRaw(\"labelEndValue\", labelEndValue);\r\n                }\r\n                this._prepareDataItem(dataItem, count);\r\n                previousValue = value;\r\n                value = endValue;\r\n                // min grid\r\n                if (minorGridInterval) {\r\n                    const minorTimeUnit = minorGridInterval.timeUnit;\r\n                    const minorCount = minorGridInterval.count;\r\n                    const mmm = this._getM(minorTimeUnit);\r\n                    //let minorValue = $time.round(new Date(previousValue + minorDuration * this._getM(minorGridInterval.timeUnit)), minorGridInterval.timeUnit, minorGridInterval.count, firstDay, utc, new Date(previousValue), timezone).getTime();\r\n                    let minorValue = $time.roun(previousValue + minorDuration * mmm, minorTimeUnit, minorCount, root, previousValue);\r\n                    let previousMinorValue;\r\n                    let minorFormats = this.get(\"minorDateFormats\", this.get(\"dateFormats\"));\r\n                    while (minorValue < value - 0.01 * minorDuration) {\r\n                        let minorDataItem;\r\n                        if (this.minorDataItems.length < m + 1) {\r\n                            minorDataItem = new DataItem(this, undefined, {});\r\n                            this.minorDataItems.push(minorDataItem);\r\n                            this.processDataItem(minorDataItem);\r\n                        }\r\n                        else {\r\n                            minorDataItem = this.minorDataItems[m];\r\n                        }\r\n                        this._createAssets(minorDataItem, [\"minor\"], true);\r\n                        this._toggleDataItem(minorDataItem, true);\r\n                        minorDataItem.setRaw(\"value\", minorValue);\r\n                        let minorEndValue = minorValue + $time.getDuration(minorTimeUnit, minorCount * mmm);\r\n                        //minorEndValue = $time.round(new Date(minorEndValue), minorGridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                        minorEndValue = $time.roun(minorEndValue, minorTimeUnit, 1, root);\r\n                        minorDataItem.setRaw(\"endValue\", minorEndValue);\r\n                        let date = new Date(minorValue);\r\n                        format = minorFormats[minorTimeUnit];\r\n                        const minorLabel = minorDataItem.get(\"label\");\r\n                        if (minorLabel) {\r\n                            if (minorLabelsEnabled) {\r\n                                minorLabel.set(\"text\", root.dateFormatter.format(date, format));\r\n                            }\r\n                            else {\r\n                                minorLabel.setPrivate(\"visible\", false);\r\n                            }\r\n                        }\r\n                        this._prepareDataItem(minorDataItem, 1);\r\n                        if (minorValue == previousMinorValue) {\r\n                            break;\r\n                        }\r\n                        previousMinorValue = minorValue;\r\n                        minorValue = minorEndValue;\r\n                        m++;\r\n                    }\r\n                }\r\n                if (value == previousValue) {\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this._toggleDataItem(this.dataItems[j], false);\r\n            }\r\n            for (let j = m; j < this.minorDataItems.length; j++) {\r\n                this._toggleDataItem(this.minorDataItems[j], false);\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _updateFinals(start, end) {\r\n        this.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\r\n        this.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\r\n    }\r\n    _getDelta() {\r\n        this._deltaMinMax = this.baseDuration() / 2;\r\n    }\r\n    _fixMin(min) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const timeUnit = baseInterval.timeUnit;\r\n        //let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let startTime = $time.roun(min, timeUnit, baseInterval.count, this._root);\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        //endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        endTime = $time.roun(endTime, timeUnit, 1, this._root);\r\n        return startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\r\n    }\r\n    _fixMax(max) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const timeUnit = baseInterval.timeUnit;\r\n        //let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let startTime = $time.roun(max, timeUnit, baseInterval.count, this._root);\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        //endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        endTime = $time.roun(endTime, timeUnit, 1, this._root);\r\n        return startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\r\n    }\r\n    _updateDates(_date, _series) {\r\n    }\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseDuration() {\r\n        return this._baseDuration;\r\n        //return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * Returns a duration of user-defined `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseMainDuration() {\r\n        return $time.getIntervalDuration(this.get(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(dataItem, fields) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!dataItem.open) {\r\n            dataItem.open = {};\r\n        }\r\n        if (!dataItem.close) {\r\n            dataItem.close = {};\r\n        }\r\n        $array.each(fields, (field) => {\r\n            let value = dataItem.get(field);\r\n            if ($type.isNumber(value)) {\r\n                let startTime = dataItem.open[field];\r\n                let endTime = dataItem.close[field];\r\n                // this is done to save cpu, as rounding is quite expensive, especially with timezone set. \r\n                // if value is between prev start and end, it means it didn't change, all is fine.\r\n                if (value >= startTime && value <= endTime) {\r\n                }\r\n                else {\r\n                    const timeUnit = baseInterval.timeUnit;\r\n                    const count = baseInterval.count;\r\n                    //startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n                    startTime = $time.roun(value, timeUnit, count, this._root);\r\n                    endTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\r\n                    //endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                    endTime = $time.roun(endTime, timeUnit, 1, this._root);\r\n                    dataItem.open[field] = startTime;\r\n                    dataItem.close[field] = endTime;\r\n                }\r\n                this._updateDates(startTime, dataItem.component);\r\n            }\r\n        });\r\n    }\r\n    _handleSizeDirty() {\r\n        // void \r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        let value = this.positionToValue(position);\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        let baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!$type.isNaN(value)) {\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const timeUnit = baseInterval.timeUnit;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            const count = baseInterval.count;\r\n            //value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n            value = $time.roun(value, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\r\n            let duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\r\n            if (timezone) {\r\n                //value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n                value = $time.roun(value + this.baseDuration() * 0.05, timeUnit, count, this._root, this.getPrivate(\"min\", 0));\r\n                duration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\r\n            }\r\n            return this.valueToPosition(value + duration * location);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\r\n     * will adjust position by `tooltipIntervalOffset`.\r\n     *\r\n     * @param  position        Position\r\n     * @param  adjustPosition  Adjust position\r\n     * @return                 Tooltip text\r\n     */\r\n    getTooltipText(position, adjustPosition) {\r\n        //@todo number formatter + tag\r\n        if (this.getPrivate(\"min\") != null) {\r\n            let format = this.get(\"tooltipDateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n            let value = this.positionToValue(position);\r\n            if ($type.isNumber(value)) {\r\n                let date = new Date(value);\r\n                let baseInterval = this.getPrivate(\"baseInterval\");\r\n                let duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\r\n                if (adjustPosition !== false) {\r\n                    date = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration);\r\n                }\r\n                return this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position, location, snap) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        if (location == null) {\r\n            location = 0.5;\r\n        }\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        const result = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n            let diValue = 0;\r\n            if (dataItem.open) {\r\n                diValue = dataItem.open[fieldName];\r\n            }\r\n            return $order.compare(diValue, value);\r\n        });\r\n        if (snap || series.get(\"snapTooltip\")) {\r\n            let first = series.dataItems[result.index - 1];\r\n            let second = series.dataItems[result.index];\r\n            if (first && second) {\r\n                if (first.open && second.close) {\r\n                    let open = first.open[fieldName];\r\n                    let close = second.close[fieldName];\r\n                    if (Math.abs(value - open) > Math.abs(value - close)) {\r\n                        return second;\r\n                    }\r\n                }\r\n            }\r\n            if (first) {\r\n                return first;\r\n            }\r\n            if (second) {\r\n                return second;\r\n            }\r\n        }\r\n        else {\r\n            const dataItem = series.dataItems[result.index - 1];\r\n            if (dataItem) {\r\n                if (dataItem.open && dataItem.close) {\r\n                    let open = dataItem.open[fieldName];\r\n                    let close = dataItem.close[fieldName];\r\n                    if (value >= open && value <= close) {\r\n                        return dataItem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(dataItem, nextItem, autoGapCount, fieldName) {\r\n        const value1 = dataItem.get(fieldName);\r\n        const value2 = nextItem.get(fieldName);\r\n        if (value2 - value1 > this.baseDuration() * autoGapCount) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` dates.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start Date\r\n     * @param  end       End Date\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToDates(start, end, duration) {\r\n        this.zoomToValues(start.getTime(), end.getTime(), duration);\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            if (this.get(\"groupData\")) {\r\n                const futureGroupInterval = this.getGroupInterval(end - start);\r\n                const baseInterval = this.get(\"baseInterval\");\r\n                let baseMin = this.getIntervalMin(baseInterval);\r\n                let baseMax = this.getIntervalMax(baseInterval) - 1;\r\n                baseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\r\n                baseMax += this._getM(futureGroupInterval.timeUnit) * $time.getIntervalDuration(futureGroupInterval);\r\n                baseMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\r\n                let futureMin = $time.roun(baseMin, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\r\n                let futureMax = $time.roun(baseMax, futureGroupInterval.timeUnit, futureGroupInterval.count, this.root);\r\n                let s = (start - futureMin) / (futureMax - futureMin);\r\n                let e = (end - futureMin) / (futureMax - futureMin);\r\n                this.zoom(s, e, duration);\r\n            }\r\n            else {\r\n                this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a `Date` object corresponding to specific position within plot\r\n     * area.\r\n     *\r\n     * @param   position  Pposition\r\n     * @return            Date\r\n     */\r\n    positionToDate(position) {\r\n        return new Date(this.positionToValue(position));\r\n    }\r\n    /**\r\n     * Returns a relative position within plot area that corresponds to specific\r\n     * date.\r\n     *\r\n     * @param   date  Date\r\n     * @return        Position\r\n     */\r\n    dateToPosition(date) {\r\n        return this.valueToPosition(date.getTime());\r\n    }\r\n    /**\r\n     * Returns relative position between two grid lines of the axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this._intervalDuration / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n    nextPosition(count) {\r\n        if (count == null) {\r\n            count = 1;\r\n        }\r\n        let dtime = this.get(\"tooltipLocation\", 0.5) * this.baseDuration();\r\n        if (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\r\n            count *= -1;\r\n        }\r\n        let tooltipValue = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        let time = this._nextTime(tooltipValue, count, baseInterval);\r\n        let selectionMin = this.getPrivate(\"selectionMin\", 0);\r\n        let selectionMax = this.getPrivate(\"selectionMax\", 0);\r\n        let min = $time.roun(selectionMin, baseInterval.timeUnit, baseInterval.count, this._root);\r\n        let max = $time.roun(selectionMax, baseInterval.timeUnit, baseInterval.count, this._root);\r\n        time += dtime;\r\n        time = $math.fitToRange(time, min + dtime, max - dtime);\r\n        return this.toGlobalPosition(this.valueToPosition(time));\r\n    }\r\n    _nextTime(time, count, baseInterval) {\r\n        return $time.roun(time + count * this.baseDuration(), baseInterval.timeUnit, baseInterval.count, this._root);\r\n    }\r\n}\r\nObject.defineProperty(DateAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"DateAxis\"\r\n});\r\nObject.defineProperty(DateAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ValueAxis.classNames.concat([DateAxis.className])\r\n});\r\n//# sourceMappingURL=DateAxis.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template]))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template]))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template]))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\r\n         */\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event);\r\n            }));\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"minGridDistance\")) {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.axis.markDirtySize();\r\n            });\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(event.point);\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(event.point);\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\r\n            this.axis.zoom(downStart - extra, downEnd + extra, 0);\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start);\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            if (!chart.inPlot(point)) {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"x\", -1000);\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (!this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0);\r\n        axis.gridContainer.set(\"x\", x);\r\n        axis.topGridContainer.set(\"x\", x);\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"width\") == null) {\r\n            axis.set(\"width\", p100);\r\n        }\r\n        ;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        axis.ghostLabel.set(\"y\", -1000);\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        const w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        const y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\r\n        axis.gridContainer.set(\"y\", y);\r\n        axis.topGridContainer.set(\"y\", y);\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toGlobalPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        if (this.get(\"inversed\")) {\r\n            position = position - start;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        position = position / (end - start) * this._lc;\r\n        position += this._ls;\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n//import { Animations } from \"../../core/util/Animation\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\", \"customValue\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            bullet._index = index;\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _makeBulletReal(dataItem, bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            sprite._setDataItem(dataItem);\r\n            sprite.setRaw(\"position\", \"absolute\");\r\n            this.bulletsContainer.children.push(sprite);\r\n        }\r\n        bullet.series = this;\r\n        dataItem.bullets.push(bullet);\r\n    }\r\n    /**\r\n     * Adds bullet directly to a data item.\r\n     *\r\n     * Please note: method accepts [[Bullet]] instance as a paramter, not a\r\n     * reference to a function.\r\n     *\r\n     * You should add Bullet instance, not a method like you do it on series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\r\n     * @since 5.6.0\r\n     *\r\n     * @param  dataItem  Target data item\r\n     * @param  bullet    Bullet instance\r\n     */\r\n    addBullet(dataItem, bullet) {\r\n        if (!dataItem.bullets) {\r\n            dataItem.bullets = [];\r\n        }\r\n        if (bullet) {\r\n            this._makeBulletReal(dataItem, bullet);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"name\")) {\r\n            this.updateLegendValue();\r\n        }\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                    if (startIndex != 0) {\r\n                        this._psi = undefined;\r\n                    }\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        return index;\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            const adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\r\n            for (let i = adjustedStartIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        count[key]++;\r\n                        sum[key] += value;\r\n                        absSum[key] += Math.abs(value);\r\n                        average[key] = sum[key] / count[key];\r\n                        if (low[key] > value || low[key] == null) {\r\n                            low[key] = value;\r\n                        }\r\n                        if (high[key] < value || high[key] == null) {\r\n                            high[key] = value;\r\n                        }\r\n                        close[key] = value;\r\n                        if (open[key] == null) {\r\n                            open[key] = value;\r\n                            previous[key] = value;\r\n                            if (baseValueSeries) {\r\n                                open[openKey] = baseValueSeries._getBase(openKey);\r\n                            }\r\n                        }\r\n                        if (startIndex === 0) {\r\n                            dataItem.setRaw((change), value - open[openKey]);\r\n                            dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        }\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            if (endIndex < this.dataItems.length - 1) {\r\n                const dataItem = this.dataItems[endIndex];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                }\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            delete previous[key];\r\n            for (let i = startIndex; i < adjustedStartIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                if (dataItem) {\r\n                    let value = dataItem.get(key);\r\n                    if (previous[key] == null) {\r\n                        previous[key] = value;\r\n                    }\r\n                    if (value != null) {\r\n                        dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                        dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                        dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                        dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                        previous[key] = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState && rule.neutral) {\r\n                                defaultState.set(rule.key, rule.neutral);\r\n                            }\r\n                        }\r\n                        if (!rule.customFunction) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        let percent;\r\n                        if (rule.logarithmic) {\r\n                            percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                        }\r\n                        else {\r\n                            percent = (value - minValue) / (maxValue - minValue);\r\n                        }\r\n                        if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                            percent = 0.5;\r\n                        }\r\n                        // fixes problems if all values are the same\r\n                        let propertyValue;\r\n                        if ($type.isNumber(rule.min)) {\r\n                            propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                        }\r\n                        else if (rule.min instanceof Color) {\r\n                            propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        else if (rule.min instanceof Percent) {\r\n                            propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                        }\r\n                        target.set(rule.key, propertyValue);\r\n                        const states = target.states;\r\n                        if (states) {\r\n                            const defaultState = states.lookup(\"default\");\r\n                            if (defaultState) {\r\n                                defaultState.set(rule.key, propertyValue);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.get(\"visible\")) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.show(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    const sprite = bullet.get(\"sprite\");\r\n                    if (sprite) {\r\n                        promises.push(sprite.hide(duration));\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posXDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_posYDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this.onPrivate(\"startIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this.onPrivate(\"endIndex\", () => {\r\n            this.root.events.once(\"frameended\", () => {\r\n                this.updateLegendValue();\r\n            });\r\n        });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axis.disposeDataItem(axisDataItem);\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._bullets = {};\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (!xAxis.inited || !yAxis.inited) {\r\n            return false;\r\n        }\r\n        const minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n        if (minBulletDistance > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let count = endIndex - startIndex;\r\n            if (xAxis == baseAxis) {\r\n                if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n            else if (yAxis == baseAxis) {\r\n                if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _fixPosition() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._bullets = {};\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this._fixPosition();\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis || !baseAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\") {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (baseAxis === yAxis || !baseAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\") {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            let positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\r\n            let positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            let x = 0;\r\n            let y = 0;\r\n            let w = right - left;\r\n            let h = bottom - top;\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                sprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\r\n                let field = bullet.get(\"field\");\r\n                const baseAxis = this.get(\"baseAxis\");\r\n                const xAxis = this.get(\"xAxis\");\r\n                const yAxis = this.get(\"yAxis\");\r\n                if (field != undefined) {\r\n                    let realField;\r\n                    if (baseAxis == xAxis) {\r\n                        if (field == \"value\") {\r\n                            realField = this._yField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._yOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._yHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._yLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionY = yAxis.getDataItemPositionY(dataItem, realField, 0, this.get(\"vcy\", 1));\r\n                            point = yAxis.get(\"renderer\").positionToPoint(positionY);\r\n                            y = point.y;\r\n                            x = left + w * locationX;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (field == \"value\") {\r\n                            realField = this._xField;\r\n                        }\r\n                        else if (field == \"open\") {\r\n                            realField = this._xOpenField;\r\n                        }\r\n                        else if (field == \"high\") {\r\n                            realField = this._xHighField;\r\n                        }\r\n                        else if (field == \"low\") {\r\n                            realField = this._xLowField;\r\n                        }\r\n                        if (realField) {\r\n                            positionX = xAxis.getDataItemPositionX(dataItem, realField, 0, this.get(\"vcx\", 1));\r\n                            point = xAxis.get(\"renderer\").positionToPoint(positionX);\r\n                            x = point.x;\r\n                            y = bottom - h * locationY;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    x = left + w * locationX;\r\n                    y = bottom - h * locationY;\r\n                }\r\n                const stacked = bullet.get(\"stacked\");\r\n                if (stacked) {\r\n                    const chart = this.chart;\r\n                    if (baseAxis == xAxis) {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let yo = y;\r\n                            y = previousBounds.top;\r\n                            if (stacked == \"down\") {\r\n                                y = previousBounds.bottom - bounds.top;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (yo < chart.plotContainer.height() / 2) {\r\n                                        y = previousBounds.bottom - bounds.top;\r\n                                    }\r\n                                    else {\r\n                                        y += bounds.bottom;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                y += bounds.bottom;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                    else {\r\n                        let previousBullet = this._bullets[positionX + \"_\" + positionY];\r\n                        if (previousBullet) {\r\n                            let previousBounds = previousBullet.bounds();\r\n                            let bounds = sprite.localBounds();\r\n                            let xo = x;\r\n                            x = previousBounds.right;\r\n                            if (stacked == \"down\") {\r\n                                x = previousBounds.left - bounds.right;\r\n                            }\r\n                            else if (stacked == \"auto\") {\r\n                                if (chart) {\r\n                                    if (xo < chart.plotContainer.width() / 2) {\r\n                                        x = previousBounds.left - bounds.right;\r\n                                    }\r\n                                    else {\r\n                                        x -= bounds.left;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                x -= bounds.left;\r\n                            }\r\n                        }\r\n                        this._bullets[positionX + \"_\" + positionY] = sprite;\r\n                    }\r\n                }\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                sprite.setAll({ x, y });\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetGrouping() {\r\n        $object.each(this._dataSets, (_key, dataSet) => {\r\n            if (dataSet != this._mainDataItems) {\r\n                $array.each(dataSet, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n        });\r\n        this._dataSets = {};\r\n        this._dataItems = this.mainDataItems;\r\n    }\r\n    _handleDataSetChange() {\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            let bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    if (bullet) {\r\n                        let sprite = bullet.get(\"sprite\");\r\n                        if (sprite) {\r\n                            sprite.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        if (!this.getPrivate(\"doNotUpdateLegend\")) {\r\n            this.updateLegendMarker(dataItem);\r\n            this.updateLegendValue(dataItem);\r\n        }\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            if (!this.isHidden() && this.get(\"visible\")) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    /**\r\n     * Resets cached axis scale values.\r\n     */\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n    /**\r\n     * A list of series's main (ungrouped) data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get mainDataItems() {\r\n        return this._mainDataItems;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _adjustStartIndex(index) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        if (baseAxis == xAxis && xAxis.isType(\"DateAxis\")) {\r\n            const baseDuration = xAxis.baseDuration();\r\n            const minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\r\n            const dl = baseDuration * this.get(\"locationX\", 0.5);\r\n            let value = -Infinity;\r\n            while (value < minSelection) {\r\n                const dataItem = this.dataItems[index];\r\n                if (dataItem) {\r\n                    const open = dataItem.open;\r\n                    if (open) {\r\n                        value = open[\"valueX\"];\r\n                    }\r\n                    else {\r\n                        value = dataItem.get(\"valueX\", 0);\r\n                    }\r\n                    value += dl;\r\n                    if (value < minSelection) {\r\n                        index++;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [this.strokes.template]))\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [this.fills.template]))\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._fillGenerator.y0(function (p) {\r\n            return p[3];\r\n        });\r\n        this._fillGenerator.x0(function (p) {\r\n            return p[2];\r\n        });\r\n        this._fillGenerator.y1(function (p) {\r\n            return p[1];\r\n        });\r\n        this._fillGenerator.x1(function (p) {\r\n            return p[0];\r\n        });\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeStroke(strokes) {\r\n        const stroke = this.mainContainer.children.push(strokes.make());\r\n        strokes.push(stroke);\r\n        return stroke;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeFill(fills) {\r\n        const fill = this.mainContainer.children.push(fills.make());\r\n        fills.push(fill);\r\n        return fill;\r\n    }\r\n    _updateChildren() {\r\n        this._strokeTemplate = undefined;\r\n        this._fillTemplate = undefined;\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        if (this.isDirty(\"stroke\")) {\r\n            const stroke = this.get(\"stroke\");\r\n            this.strokes.template.set(\"stroke\", stroke);\r\n            const legendStroke = this._legendStroke;\r\n            if (legendStroke) {\r\n                legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            const fill = this.get(\"fill\");\r\n            this.fills.template.set(\"fill\", fill);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillPattern\")) {\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            this.fills.template.set(\"fillPattern\", fillPattern);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fillPattern\", fillPattern);\r\n            }\r\n        }\r\n        if (this.isDirty(\"curveFactory\")) {\r\n            const curveFactory = this.get(\"curveFactory\");\r\n            if (curveFactory) {\r\n                this._strokeGenerator.curve(curveFactory);\r\n                this._fillGenerator.curve(curveFactory);\r\n            }\r\n        }\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                this.fills.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.strokes.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.axisRanges.each((axisRange) => {\r\n                    let fills = axisRange.fills;\r\n                    if (fills) {\r\n                        fills.each((fill) => {\r\n                            fill.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                    let strokes = axisRange.strokes;\r\n                    if (strokes) {\r\n                        strokes.each((stroke) => {\r\n                            stroke.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                });\r\n                let startIndex = this.startIndex();\r\n                let strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                let fillTemplateField = this.fills.template.get(\"templateField\");\r\n                let strokeTemplateFound = true;\r\n                let fillTemplateFound = true;\r\n                if (strokeTemplateField) {\r\n                    strokeTemplateFound = false;\r\n                }\r\n                if (fillTemplateField) {\r\n                    fillTemplateFound = false;\r\n                }\r\n                for (let i = startIndex - 1; i >= 0; i--) {\r\n                    let dataItem = this.dataItems[i];\r\n                    let hasValues = true;\r\n                    let dataContext = dataItem.dataContext;\r\n                    if (strokeTemplateField) {\r\n                        if (dataContext[strokeTemplateField]) {\r\n                            strokeTemplateFound = true;\r\n                        }\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        if (dataContext[fillTemplateField]) {\r\n                            fillTemplateFound = true;\r\n                        }\r\n                    }\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (!$type.isNumber(dataItem.get(field))) {\r\n                            hasValues = false;\r\n                        }\r\n                    });\r\n                    if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                        startIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                let len = this.dataItems.length;\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < len) {\r\n                    endIndex++;\r\n                    for (let i = endIndex; i < len; i++) {\r\n                        let dataItem = this.dataItems[i];\r\n                        let hasValues = true;\r\n                        $array.each(this._valueFields, (field) => {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues) {\r\n                            endIndex = i + 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                this._endIndex = endIndex;\r\n                this._clearGraphics();\r\n                this._sindex = 0;\r\n                this._dindex = startIndex;\r\n                if (this.dataItems.length == 1) {\r\n                    this._startSegment(0);\r\n                }\r\n                else {\r\n                    // this is done to avoid recursion with a lot of segments \r\n                    while (this._dindex < endIndex - 1) {\r\n                        this._startSegment(this._dindex);\r\n                        this._sindex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _clearGraphics() {\r\n        this.strokes.clear();\r\n        this.fills.clear();\r\n        this.axisRanges.each((axisRange) => {\r\n            axisRange.fills.clear();\r\n            axisRange.strokes.clear();\r\n        });\r\n    }\r\n    _startSegment(dataItemIndex) {\r\n        let endIndex = this._endIndex;\r\n        let currentEndIndex = endIndex;\r\n        const autoGapCount = this.get(\"autoGapCount\");\r\n        const connect = this.get(\"connect\");\r\n        const fill = this.makeFill(this.fills);\r\n        const fillTemplate = this._fillTemplate;\r\n        const originalTemplate = this.fills.template;\r\n        if (fillTemplate && fillTemplate != originalTemplate) {\r\n            fill.template = fillTemplate;\r\n        }\r\n        fill.setPrivate(\"visible\", true);\r\n        const stroke = this.makeStroke(this.strokes);\r\n        const strokeTemplate = this._strokeTemplate;\r\n        if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n            stroke.template = strokeTemplate;\r\n        }\r\n        stroke.setPrivate(\"visible\", true);\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        let baseAxis = this.get(\"baseAxis\");\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let xField = this._xField;\r\n        let yField = this._yField;\r\n        let xOpenField = this._xOpenField;\r\n        let yOpenField = this._yOpenField;\r\n        const xOpenFieldValue = this.get(\"openValueXField\");\r\n        const yOpenFieldValue = this.get(\"openValueYField\");\r\n        if (!xOpenFieldValue) {\r\n            xOpenField = this._xField;\r\n        }\r\n        if (!yOpenFieldValue) {\r\n            yOpenField = this._yField;\r\n        }\r\n        const stacked = this.get(\"stacked\");\r\n        const basePosX = xAxis.basePosition();\r\n        const basePosY = yAxis.basePosition();\r\n        let baseField;\r\n        if (baseAxis === yAxis) {\r\n            baseField = this._yField;\r\n        }\r\n        else {\r\n            baseField = this._xField;\r\n        }\r\n        const segments = [];\r\n        let points = [];\r\n        segments.push(points);\r\n        const strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n        const fillTemplateField = this.fills.template.get(\"templateField\");\r\n        let locationX = this.get(\"locationX\", 0.5);\r\n        let locationY = this.get(\"locationY\", 0.5);\r\n        let openLocationX = this.get(\"openLocationX\", locationX);\r\n        let openLocationY = this.get(\"openLocationY\", locationY);\r\n        const minDistance = this.get(\"minDistance\", 0);\r\n        let i;\r\n        let fillVisible = this.fills.template.get(\"visible\");\r\n        if (this.axisRanges.length > 0) {\r\n            fillVisible = true;\r\n        }\r\n        let getOpen = false;\r\n        if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n            getOpen = true;\r\n        }\r\n        const o = {\r\n            points, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\r\n        };\r\n        let rangeStrokeTemplate = this._strokeTemplate;\r\n        let rangeFillTemplate = this._fillTemplate;\r\n        for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n            this._dindex = i;\r\n            const dataItem = this._dataItems[i];\r\n            let valueX = dataItem.get(xField);\r\n            let valueY = dataItem.get(yField);\r\n            if (valueX == null || valueY == null) {\r\n                if (!connect) {\r\n                    points = [];\r\n                    segments.push(points);\r\n                    o.points = points;\r\n                }\r\n            }\r\n            else {\r\n                this._getPoints(dataItem, o);\r\n            }\r\n            if (strokeTemplateField) {\r\n                let strokeTemplate = dataItem.dataContext[strokeTemplateField];\r\n                if (strokeTemplate) {\r\n                    if (!(strokeTemplate instanceof Template)) {\r\n                        strokeTemplate = Template.new(strokeTemplate);\r\n                    }\r\n                    this._strokeTemplate = strokeTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeStrokeTemplate = strokeTemplate;\r\n                        stroke.template = strokeTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (fillTemplateField) {\r\n                let fillTemplate = dataItem.dataContext[fillTemplateField];\r\n                if (fillTemplate) {\r\n                    if (!(fillTemplate instanceof Template)) {\r\n                        fillTemplate = Template.new(fillTemplate);\r\n                    }\r\n                    this._fillTemplate = fillTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        rangeFillTemplate = fillTemplate;\r\n                        fill.template = fillTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (!connect) {\r\n                let nextItem = this.dataItems[i + 1];\r\n                if (nextItem) {\r\n                    if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        if (i === endIndex) {\r\n            this._endLine(points, segments[0][0]);\r\n        }\r\n        if (stroke) {\r\n            this._drawStroke(stroke, segments);\r\n        }\r\n        if (fill) {\r\n            this._drawFill(fill, segments);\r\n        }\r\n        this.axisRanges.each((axisRange) => {\r\n            const container = axisRange.container;\r\n            const fills = axisRange.fills;\r\n            const fill = this.makeFill(fills);\r\n            if (container) {\r\n                container.children.push(fill);\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            this._drawFill(fill, segments);\r\n            const strokes = axisRange.strokes;\r\n            const stroke = this.makeStroke(strokes);\r\n            if (container) {\r\n                container.children.push(stroke);\r\n            }\r\n            if (rangeStrokeTemplate && rangeStrokeTemplate != this.strokes.template) {\r\n                stroke.template = rangeStrokeTemplate;\r\n            }\r\n            if (rangeFillTemplate && rangeFillTemplate != this.fills.template) {\r\n                fill.template = rangeFillTemplate;\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            this._drawStroke(stroke, segments);\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        });\r\n    }\r\n    _getPoints(dataItem, o) {\r\n        let points = o.points;\r\n        let itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n        let itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n        let xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\r\n        let yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\r\n        if (this._shouldInclude(xPos)) {\r\n            const iPoint = this.getPoint(xPos, yPos);\r\n            const point = [iPoint.x, iPoint.y];\r\n            iPoint.x += this._x;\r\n            iPoint.y += this._y;\r\n            dataItem.set(\"point\", iPoint);\r\n            if (o.fillVisible) {\r\n                let xPos0 = xPos;\r\n                let yPos0 = yPos;\r\n                if (o.baseAxis === o.xAxis) {\r\n                    yPos0 = o.basePosY;\r\n                }\r\n                else if (o.baseAxis === o.yAxis) {\r\n                    xPos0 = o.basePosX;\r\n                }\r\n                if (o.getOpen) {\r\n                    let valueX = dataItem.get(o.xOpenField);\r\n                    let valueY = dataItem.get(o.yOpenField);\r\n                    if (valueX != null && valueY != null) {\r\n                        let itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                        let itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                        if (o.stacked) {\r\n                            let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemX) {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, stackToItemX.component.get(\"vcx\"));\r\n                                if ($type.isNaN(xPos0)) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.yAxis === o.baseAxis) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                                else {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\r\n                                }\r\n                            }\r\n                            if (stackToItemY) {\r\n                                yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, stackToItemY.component.get(\"vcy\"));\r\n                                if ($type.isNaN(yPos0)) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.xAxis === o.baseAxis) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                                else {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\r\n                            yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\r\n                        }\r\n                    }\r\n                }\r\n                let closeIPoint = this.getPoint(xPos0, yPos0);\r\n                point[2] = closeIPoint.x;\r\n                point[3] = closeIPoint.y;\r\n            }\r\n            if (o.minDistance > 0) {\r\n                const p0 = point[0];\r\n                const p1 = point[1];\r\n                const p2 = point[2];\r\n                const p3 = point[3];\r\n                const prev = this._previousPoint;\r\n                const pp0 = prev[0];\r\n                const pp1 = prev[1];\r\n                const pp2 = prev[2];\r\n                const pp3 = prev[3];\r\n                if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                    points.push(point);\r\n                    this._previousPoint = point;\r\n                }\r\n            }\r\n            else {\r\n                points.push(point);\r\n            }\r\n        }\r\n    }\r\n    _endLine(_points, _firstPoint) {\r\n    }\r\n    _drawStroke(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._strokeGenerator.context(display);\r\n                    this._strokeGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _drawFill(graphics, segments) {\r\n        if (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._fillGenerator.context(display);\r\n                    this._fillGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.fills = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n        }, [this.fills.template, axisRange.fills.template]));\r\n        axisRange.strokes = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n        }, [this.strokes.template, axisRange.strokes.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const marker = legendDataItem.get(\"marker\");\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                markerRectangle.setPrivate(\"visible\", false);\r\n            }\r\n            marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n            const legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n            }, [this.strokes.template]));\r\n            this._legendStroke = legendStroke;\r\n            const legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n            }, [this.fills.template]));\r\n            this._legendFill = legendFill;\r\n            const disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n            legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            if (this.bullets.length > 0) {\r\n                const bulletFunction = this.bullets.getIndex(0);\r\n                if (bulletFunction) {\r\n                    const bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\r\n                    if (bullet) {\r\n                        const sprite = bullet.get(\"sprite\");\r\n                        if (sprite instanceof Graphics) {\r\n                            sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                        }\r\n                        if (sprite) {\r\n                            sprite.set(\"tooltipText\", undefined);\r\n                            sprite.set(\"tooltipHTML\", undefined);\r\n                            marker.children.push(sprite);\r\n                            sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            marker.events.on(\"boundschanged\", () => {\r\n                                sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LineSeries\"\r\n});\r\nObject.defineProperty(LineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([LineSeries.className])\r\n});\r\n//# sourceMappingURL=LineSeries.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_alwaysShow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", () => this._handleLineBlur()));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", () => this._handleLineFocus()));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", () => this._handleLineBlur()));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove($utils.getEventKey(ev), ev.ctrlKey);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(key, ctrlKey) {\r\n        let dir = \"\";\r\n        const chart = this.chart;\r\n        let axis;\r\n        if (chart && chart.xAxes.length) {\r\n            if (this._root.focused(this.lineX)) {\r\n                dir = \"positionX\";\r\n                axis = chart.xAxes.getIndex(0);\r\n            }\r\n            else if (this._root.focused(this.lineY)) {\r\n                axis = chart.yAxes.getIndex(0);\r\n                dir = \"positionY\";\r\n            }\r\n            let m = 1;\r\n            if (ctrlKey) {\r\n                m = 5;\r\n            }\r\n            if (axis) {\r\n                let inversed = axis.get(\"renderer\").get(\"inversed\", false);\r\n                let step;\r\n                if (key == \"ArrowRight\" || key == \"ArrowDown\") {\r\n                    step = 1;\r\n                }\r\n                else if (key == \"ArrowLeft\" || key == \"ArrowUp\") {\r\n                    step = -1;\r\n                }\r\n                else if (key == \"Tab\") {\r\n                    step = 0;\r\n                }\r\n                if (step != null) {\r\n                    if (inversed) {\r\n                        step *= -1;\r\n                    }\r\n                    this.set(dir, axis.nextPosition(step * m));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleLineFocus() {\r\n        this._alwaysShow = this.get(\"alwaysShow\", false);\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\", 0),\r\n            positionY: this.getPrivate(\"positionY\", 0),\r\n            alwaysShow: true\r\n        });\r\n        this._handleLineMove(\"Tab\");\r\n    }\r\n    _handleLineBlur() {\r\n        if (this.lineX.isFocus() || this.lineY.isFocus()) {\r\n            this.setAll({\r\n                positionX: undefined,\r\n                positionY: undefined,\r\n                alwaysShow: this._alwaysShow\r\n            });\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 3);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 3);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    updateCursor() {\r\n        if (this.get(\"alwaysShow\")) {\r\n            this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n        }\r\n        this.handleMove();\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                this.updateCursor();\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event);\r\n            if (Math.hypot(this._lastPoint2.x - event.point.x, this._lastPoint2.y - event.point.y) > 1) {\r\n                this._handleLineBlur();\r\n                this._lastPoint2 = event.point;\r\n            }\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        if (event.originalEvent.button == 2) {\r\n            return;\r\n        }\r\n        const rootPoint = event.point;\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = event.point;\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                    else {\r\n                        const type = \"selectcancelled\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = event.point;\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent, originalEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && (this._inPlot(local) || this._downPoint)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { AnimatedTheme } from \"../.internal/themes/AnimatedTheme\";\r\nexport default AnimatedTheme;\r\n//# sourceMappingURL=Animated.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n        this.rule(\"Polygon\").set(\"animationDuration\", 600);\r\n        this.rule(\"ArcDiagram\").set(\"animationDuration\", 600);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","var _templateObject;\nfunction _taggedTemplateLiteralLoose(e, t) { return t || (t = e.slice(0)), e.raw = t, e; }\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useLayoutEffect, useState } from 'react';\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\nimport LogoTelcel from './assets/images/logo-telcel.png';\nimport LogoAltan from './assets/images/red-5g-altan-redes.png';\nimport LogoAtt from './assets/images/ATT.png';\nimport LogoBait from './assets/images/bait.png';\nimport LogoMega from './assets/images/megacable-logo2.png';\nimport { styled } from '@superset-ui/core';\nimport { altan, bait, telcel, mega, att } from \"./assets/constants/vendors.js\";\nvar Styles = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  position: relative;\\n  text-align: center;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 0 0;\\n  }\\n\"])));\nvar vendorLogo = {\n  TELCEL: LogoTelcel,\n  ALTAN: LogoAltan,\n  ATT: LogoAtt,\n  BAIT: LogoBait,\n  MEGA: LogoMega\n};\nvar vendorData = {\n  ALTAN: altan,\n  BAIT: bait,\n  ATT: att,\n  TELCEL: telcel,\n  MEGA: mega\n};\nvar vendorColors = {\n  ALTAN: 0xff0000,\n  BAIT: 0x808080,\n  ATT: 0x0000FF,\n  TELCEL: '#0080FF',\n  MEGA: 0x0000FF\n};\nexport default function SupersetPluginChartCscLine(props) {\n  var {\n    vendor\n  } = props;\n  var numChart = Math.floor(Math.random() * 1000);\n  var [imageLogo] = useState(vendorLogo[vendor]);\n  useLayoutEffect(() => {\n    var root = am5.Root.new(\"chartdiv\" + numChart);\n    root.setThemes([am5themes_Animated.new(root)]);\n    var data = vendorData[vendor];\n    // Make sure your data format is converted properly for DateAxis\n    data.forEach(function (item) {\n      item.date = new Date(item.date);\n    });\n    root.dateFormatter.setAll({\n      dateFormat: 'yyyy',\n      dateFields: ['valueX']\n    });\n\n    // Create chart\n    var chart = root.container.children.push(am5xy.XYChart.new(root, {\n      focusable: true,\n      panX: true,\n      panY: true,\n      wheelX: \"panX\",\n      wheelY: \"zoomX\",\n      pinchZoomX: true,\n      paddingLeft: 0\n    }));\n\n    // Create axes\n    var xAxis = chart.xAxes.push(am5xy.DateAxis.new(root, {\n      maxDeviation: 0,\n      groupData: false,\n      baseInterval: {\n        timeUnit: \"minute\",\n        count: 15\n      },\n      renderer: am5xy.AxisRendererX.new(root, {\n        minorGridEnabled: true,\n        minGridDistance: 1\n      }),\n      tooltip: am5.Tooltip.new(root, {})\n    }));\n\n    // Customize the labels\n    xAxis.get(\"renderer\").labels.template.setAll({\n      fontSize: \"8px\",\n      // Set the font size\n      rotation: 45,\n      // Rotate the labels by 45 degrees\n      centerY: am5.p50,\n      // Adjust vertical alignment of labels\n      centerX: am5.p50 // Adjust horizontal alignment of labels\n    });\n    var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {\n      maxDeviation: 0.2,\n      renderer: am5xy.AxisRendererY.new(root, {})\n    }));\n    // Customize the labels\n    var series = chart.series.push(am5xy.LineSeries.new(root, {\n      minBulletDistance: 1,\n      connect: false,\n      xAxis: xAxis,\n      yAxis: yAxis,\n      valueYField: \"value\",\n      valueXField: \"date\",\n      tooltip: am5.Tooltip.new(root, {\n        labelText: \"{valueY}\"\n      })\n    }));\n    series.fills.template.setAll({\n      fillOpacity: 0.2,\n      visible: true\n    });\n    series.strokes.template.setAll({\n      strokeWidth: 2\n    });\n\n    // Set up data processor to parse string dates\n    series.data.processor = am5.DataProcessor.new(root, {\n      dateFormat: \"yyyy-MM-dd\",\n      dateFields: [\"date\"]\n    });\n    series.data.setAll(data);\n    series.bullets.push(function () {\n      var circle = am5.Circle.new(root, {\n        radius: 2,\n        fill: root.interfaceColors.get(\"background\"),\n        stroke: series.get(\"fill\"),\n        strokeWidth: 1\n      });\n      return am5.Bullet.new(root, {\n        sprite: circle\n      });\n    });\n    var colorToFill = am5.color(vendorColors[vendor]);\n    series.set(\"fill\", colorToFill);\n    series.set(\"stroke\", colorToFill);\n\n    // Add cursor\n    var cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\n      xAxis: xAxis,\n      behavior: \"none\"\n    }));\n    cursor.lineY.set(\"visible\", false);\n    return () => {\n      root.dispose(); // Clean up on unmount\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Styles, {\n    className: \"wrap-cscline\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imageLogo,\n    alt: 'VendorImage',\n    width: \"80px\",\n    height: \"auto\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"chartdiv\" + numChart,\n    style: {\n      width: '100%',\n      height: '100px'\n    }\n  }));\n}","export var altan = [{\n  \"date\": \"2024-10-11T11:00:00Z\",\n  \"value\": 3\n}, {\n  \"date\": \"2024-10-11T11:15:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T11:30:00Z\",\n  \"value\": 3\n}, {\n  \"date\": \"2024-10-11T11:35:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T11:45:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T12:00:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T12:15:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T12:30:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T12:45:00Z\",\n  \"value\": 3\n}, {\n  \"date\": \"2024-10-11T13:00:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T13:15:00Z\",\n  \"value\": 3\n}, {\n  \"date\": \"2024-10-11T13:30:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T13:45:00Z\",\n  \"value\": 0\n}, {\n  \"date\": \"2024-10-11T14:00:00Z\",\n  \"value\": 3\n}];\nexport var bait = [{\n  \"date\": \"2024-10-11T11:00:00Z\",\n  \"value\": 1\n}, {\n  \"date\": \"2024-10-11T11:15:00Z\",\n  \"value\": 1\n}, {\n  \"date\": \"2024-10-11T11:30:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T11:35:00Z\",\n  \"value\": 6\n}, {\n  \"date\": \"2024-10-11T11:45:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T12:00:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T12:15:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T12:30:00Z\",\n  \"value\": 1\n}, {\n  \"date\": \"2024-10-11T12:45:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T13:00:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T13:15:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T13:30:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T13:45:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T14:00:00Z\",\n  \"value\": 1\n}];\nexport var telcel = [{\n  \"date\": \"2024-10-11T11:00:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T11:15:00Z\",\n  \"value\": 5\n}, {\n  \"date\": \"2024-10-11T11:30:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T11:35:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T11:45:00Z\",\n  \"value\": 12\n}, {\n  \"date\": \"2024-10-11T12:00:00Z\",\n  \"value\": 19\n}, {\n  \"date\": \"2024-10-11T12:15:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T12:30:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T12:45:00Z\",\n  \"value\": 6\n}, {\n  \"date\": \"2024-10-11T13:00:00Z\",\n  \"value\": 6\n}, {\n  \"date\": \"2024-10-11T13:15:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T13:30:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T13:45:00Z\",\n  \"value\": 4\n}, {\n  \"date\": \"2024-10-11T14:00:00Z\",\n  \"value\": 4\n}];\nexport var mega = [{\n  \"date\": \"2024-10-11T11:00:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T11:15:00Z\",\n  \"value\": 5\n}, {\n  \"date\": \"2024-10-11T11:30:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T11:35:00Z\",\n  \"value\": 30\n}, {\n  \"date\": \"2024-10-11T11:45:00Z\",\n  \"value\": 5\n}, {\n  \"date\": \"2024-10-11T12:00:00Z\",\n  \"value\": 22\n}, {\n  \"date\": \"2024-10-11T12:15:00Z\",\n  \"value\": 12\n}, {\n  \"date\": \"2024-10-11T12:30:00Z\",\n  \"value\": 15\n}, {\n  \"date\": \"2024-10-11T12:45:00Z\",\n  \"value\": 38\n}, {\n  \"date\": \"2024-10-11T13:00:00Z\",\n  \"value\": 20\n}, {\n  \"date\": \"2024-10-11T13:15:00Z\",\n  \"value\": 22\n}, {\n  \"date\": \"2024-10-11T13:30:00Z\",\n  \"value\": 24\n}, {\n  \"date\": \"2024-10-11T13:45:00Z\",\n  \"value\": 30\n}, {\n  \"date\": \"2024-10-11T14:00:00Z\",\n  \"value\": 20\n}];\nexport var att = [{\n  \"date\": \"2024-10-11T11:00:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T11:15:00Z\",\n  \"value\": 14\n}, {\n  \"date\": \"2024-10-11T11:30:00Z\",\n  \"value\": 5\n}, {\n  \"date\": \"2024-10-11T11:35:00Z\",\n  \"value\": 14\n}, {\n  \"date\": \"2024-10-11T11:45:00Z\",\n  \"value\": 5\n}, {\n  \"date\": \"2024-10-11T12:00:00Z\",\n  \"value\": 14\n}, {\n  \"date\": \"2024-10-11T12:15:00Z\",\n  \"value\": 5\n}, {\n  \"date\": \"2024-10-11T12:30:00Z\",\n  \"value\": 8\n}, {\n  \"date\": \"2024-10-11T12:45:00Z\",\n  \"value\": 12\n}, {\n  \"date\": \"2024-10-11T13:00:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T13:15:00Z\",\n  \"value\": 14\n}, {\n  \"date\": \"2024-10-11T13:30:00Z\",\n  \"value\": 2\n}, {\n  \"date\": \"2024-10-11T13:45:00Z\",\n  \"value\": 3\n}, {\n  \"date\": \"2024-10-11T14:00:00Z\",\n  \"value\": 14\n}];"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","create","SuppressedError","Percent","constructor","percent","defineProperty","this","enumerable","configurable","writable","_value","toString","interpolate","min","max","normalize","Math","p100","p50","Number","toNumber","isNumber","converted","isString","replace","toDate","isDate","Date","num","repeat","string","amount","Array","join","call","getType","isObject","PLACEHOLDER","PLACEHOLDER2","indexOf","array","length","i","map","fn","output","each","eachReverse","eachContinue","remove","element","found","index","splice","removeFirst","move","toIndex","removeIndex","push","insertIndex","pushOne","copy","findIndex","matches","find","getSortedIndex","ordering","start","end","pivot","order","getFirstSortedIndex","keepIf","keep","keys","object","assign","f","forEach","key","hasKey","hasOwnProperty","DisposerClass","_disposed","isDisposed","dispose","_dispose","Disposer","ArrayDisposer","super","arguments","_disposers","x","MultiDisposer","disposers","CounterDisposer","increment","_counter","addEventListener","dom","type","listener","options","removeEventListener","onZoom","window","_ev","supports","cap","getPointerId","event","pointerId","getRendererEvent","isTouchEvent","ev","Touch","PointerEvent","pointerType","MouseEvent","match","setStyle","property","style","getEventTarget","composedPath","path","target","isLocalEvent","a","b","cursor","parentNode","host","contains","root","setInteractive","interactive","pointerEvents","getEventKey","undefined","keyCode","relativeToValue","full","decimalPlaces","number","padString","len","char","trim","text","trimLeft","trimRight","cleanFormat","format","stripTags","escapeForRgex","getYearDay","date","utc","getFullYear","diff","getTime","getTimezoneOffset","floor","getWeek","_utc","d","UTC","getMonth","getDate","day","getUTCDay","setUTCDate","getUTCDate","firstDay","getUTCFullYear","ceil","getWeekYear","getMonthWeek","firstWeek","currentWeek","get12Hours","hours","base","getTimeZone","long","savings","timezone","d1","toLocaleString","timeZone","timeZoneName","substr","wotz","wtz","utcDate","capitalizeFirst","charAt","toUpperCase","slice","hslToRgb","color","r","g","h","s","l","hue2rgb","p","q","t","round","rgbToHsl","getLightnessStep","isLight","mergeTags","tags1","tags2","filter","self","sameBounds","left","right","top","bottom","string2hex","parseInt","input","Color","fromAny","hex","_hex","toCSS","alpha","toCSSHex","toHSL","fromHSL","rgb","fromRGB","fromHex","fromString","fromCSS","val","rgba2hex","Error","alternative","lightAlternative","darkAlternative","light","dark","from","to","mode","range","lighten","brighten","saturate","saturation","hsl","waitForAnimations","animations","promises","_","animation","waitForStop","all","defaultInterpolate","percentInterpolate","colorInterpolate","AnimationState","_listeners","_killed","_disabled","_iterating","_enabled","disposer","hasListeners","hasListenersByType","test","killed","enable","disable","enableType","disableType","Infinity","_removeListener","_removeExistingListener","once","callback","context","_eachListener","info","isEnabled","removeType","has","_shouldDispatch","count","dispatch","_on","shouldClone","onAll","_type","on","off","copyFrom","source","checkBounds","List","initial","_values","values","removeValue","hasIndex","getIndex","_onPush","newValue","events","_onInsertIndex","_onSetIndex","oldValue","_onRemoveIndex","_onMoveIndex","oldIndex","newIndex","_onClear","oldValues","setIndex","swap","value_a","value_b","moveValue","unshift","pushAll","pop","shift","setAll","newArray","old","clear","Symbol","iterator","ListAutoDispose","autoDispose","ListTemplate","template","make","Children","container","_container","_events","change","_onRemoved","_onInserted","child","_setParent","childrenDisplay","_childrenDisplay","addChild","_display","addChildAt","removeChild","markDirtyBounds","markDirty","linear","cubic","out","ease","PI","asin","State","entity","settings","_entity","_settings","_userSettings","get","fallback","setRaw","set","_eachSetting","seen","defaultState","states","lookup","applyAnimate","duration","stateAnimationDuration","easing","stateAnimationEasing","animate","States","name","_states","state","newState","_applyState","_applyStateAnimated","registry","compare","compareArray","leftLength","rightLength","compareNumber","Adapters","add","callbacks","_callbacks","_markDirtyKey","fold","Animation","loops","startingTime","_animation","_from","_to","_duration","_easing","_loops","_interpolate","getInterpolate","_oldTime","playing","_playing","stopped","_stopped","stop","pause","play","_startAnimation","percentage","_time","_reject","_checkEnded","_run","currentTime","_reset","counter","Settings","_checkDirty","_userProperties","resetUserSettings","_runAnimation","Stopped","paused","_animatingSettings","_stopAnimation","_set","_animatingPrivateSettings","_stopAnimationPrivate","setPrivate","_setPrivate","Playing","Paused","_key","_markDirtyPrivateKey","_settingEvents","onPrivate","_privateSettingEvents","offPrivate","getRaw","_sendKeyEvent","_sendPrivateKeyEvent","_setRaw","_prevSettings","removeAll","getPrivate","_privateSettings","_setPrivateRaw","_prevPrivateSettings","setPrivateRaw","removePrivate","_animationTime","animatePrivate","Entity","isReal","templates","_createEvents","_root","_internalTemplates","id","_registerId","_template","_afterNew","_new","shouldApply","_setObjectTemplate","_applyTemplates","_setDefaults","_afterNewApplyThemes","_applyThemes","classNames","className","_setDefaultFn","_setDefault","_setRawDefault","_clearDirty","_dirty","_dirtyPrivate","isDirty","isPrivateDirty","isType","_pushPropertyDisposer","_disposerProperties","_disposeProperty","_removeObjectTemplate","_addDirtyEntity","_addAnimation","animationTime","_name","adapters","isUserSetting","_setSoft","_removeTemplateProperty","_userPrivateProperties","_removeTemplatePrivateProperty","_setTemplateProperty","_findTemplateByKey","_setTemplatePrivateProperty","_findTemplateByPrivateKey","_walkParents","_rootContainer","_applyStateByKey","other","_eachTemplate","_apply","_applyTemplate","_templateDisposers","privateSettings","_runSetup","setup","_findStaticTemplate","_templates","_disposeTemplates","_findTemplate","findIndexReverse","_removeTemplates","force","isConnected","defaults","themes","themeTags","Set","tags","tag","_defaultThemes","theme","concat","allRules","rules","_lookupRules","rule","every","_changed","_beforeChanged","prevId","entitiesById","_afterChanged","addDisposer","setTimeout","delay","removeDispose","clearTimeout","hasTag","addTag","removeTag","_t","locale","rest","language","translate","TemplateState","_stateChanged","TemplateStates","TemplateAdapters","Template","entities","_entities","RADIANS","DEGREES","precision","rounded","pow","fitToRange","sin","angle","cos","getArcPoint","radius","arc","y","SpriteEventDispatcher","sprite","_sprite","_makePointerEvent","originalEvent","point","simulated","native","_onRenderer","_rendererDisposers","rendererEvent","RENDERER_EVENTS","stopParentDispatch","_dispatchParents","dispatchParents","parent","isDragging","_hasDown","_hasMoved","_getBounds","bounds","globalBounds","strokeWidth","_renderer","removeHovering","Sprite","markDirtyKey","_addPercentagePositionChildren","markDirtyPosition","_removeTemplateField","_templateField","_processTemplateField","field","dataItem","dataContext","new","_setDataItem","oldDataItem","_dataItem","eventType","newDataItem","_parent","_addPercentageSizeChildren","_percentageSizeChildren","_percentagePositionChildren","_addDirtyPosition","updatePivotPoint","_localBounds","centerX","centerY","_handleStates","previous","tooltip","setLayer","markDirtyLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","isHover","showTooltip","_statesHandled","isHidden","markDirtyAccessibility","display","draggable","_dragDp","dragStart","dragMove","dragStop","cancelTouch","tooltipText","tooltipHTML","showTooltipOn","_tooltipDp","getTooltip","hideTooltip","document","toggleKey","_toggleDp","_isDragging","scale","visible","_prevWidth","_sizeDirty","_updateSize","wheelable","_registerTabindexOrder","_unregisterTabindexOrder","blur","brightness","contrast","sepia","hue","invert","cursorOverStyle","_focusDp","exportable","_hoverDp","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","inactive","_dragEvent","_dragPoint","_downPoint","_downPoints","downPoint","abs","dragEvent","dragPoint","hypot","getLocalBounds","depth","markDirtySize","_addDirtyBounds","isMeasured","invalidateBounds","isFocus","_invalidateAccessibility","_updateBounds","oldBounds","_adjustedLocalBounds","newBounds","_fixMinBounds","getAdjustedBounds","minWidth","minHeight","privateWidth","privateHeight","_removeParent","children","hover","unhover","tooltipPosition","tooltipTarget","_setMatrix","toGlobal","_getTooltipPoint","label","width","height","markDirtyText","promise","show","timeout","hide","_updatePosition","dx","dy","_x","xx","yy","position","innerWidth","_y","innerHeight","_removeFocusElement","adjustedLocalBounds","localBounds","p0","p1","p2","p3","_onShow","_onHide","appear","success","_error","_isShowing","_isHidden","_isHiding","isShowing","isHiding","hovering","focused","isVisible","isVisibleDeep","compositeOpacity","opacity","compositeScale","compositeRotation","rotation","maxWidth","w","maxHeight","_walkParent","updateChildren","prevParent","getNumberFormatter","numberFormatter","getDateFormatter","dateFormatter","getDurationFormatter","durationFormatter","toLocal","_getDownPoint","_getDownPointId","sort","toFront","toBack","Pattern","makeGraphics","pattern","_pattern","_draw","_clear","_checkDirtyFill","repetition","fill","fillOpacity","backgroundDisplay","_backgroundDisplay","beginFill","drawRect","endFill","createPattern","PicturePattern","_load","canvas","image","_image","patternWidth","patternHeight","fit","src","Image","decode","catch","BlendMode","Graphics","crisp","gradient","gradientTarget","strokeDasharray","setLineDash","strokeDashoffset","setLineDashOffset","blendMode","NORMAL","draw","svgPath","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","shadow","stops","colorInherited","opacityInherited","getFill","strokeOpacity","resolution","lineJoin","lineStyle","endStroke","Rectangle","eachChildren","Layout","HorizontalLayout","updateContainer","paddingLeft","availableWidth","totalPercent","childWidth","prevX","marginLeft","marginRight","VerticalLayout","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","GridLayout","MAX_VALUE","paddingRight","minCellWidth","maxCellWidth","columnCount","columnWidths","getColumnWidths","column","maxColumnHeight","totalWidth","TextFormatter","escape","prefix","unescape","RegExp","cleanUp","chunk","quotedBlocks","noFormatting","res","chunks","split","chunks2","i2","chunk2","isImage","getTextStyle","fontWeight","textDecoration","populateString","getTagValue","tagName","parts","reg","exec","prop","dateFields","numericFields","durationFields","method","params","matches2","reg2","getTagValueFromObject","component","getCustomDataValue","customData","current","formatApplied","part","tmp","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","hints","toLowerCase","Container","makeContainer","allChildren","_removeHTMLContent","interactiveChildren","_prevHeight","layout","contentMask","_contentMask","mask","updateBackground","background","verticalScrollbar","_contentHeight","bg","pWidth","pHeight","horizontal","vertical","m","paddingBottom","childBounds","childX","childY","cl","cr","ct","cb","_contentWidth","_addDirtyParent","_prepareChildren","_updateHTMLContent","html","_setHTMLContent","_positionHTMLElement","scrollToChild","ch","contentH","pos","_updateChildren","startGrip","endGrip","interfaceColors","_vsbd0","wheelEvent","preventDefault","shiftY","deltaY","_vsbd1","walkChildren","updated","Text","makeTextStyle","makeText","textStyle","_getText","updateTooltip","_removeTooltipElement","wordWrapWidth","oversizedBehavior","breakWords","ellipsis","ignoreFormatting","minScale","_textStyles","styleName","maxLength","lastNonAlphanumericIndex","substring","_getAccessibleText","ariaLabel","Native","_observer","ResizeObserver","entries","entry","_targets","addTarget","observe","box","removeTarget","unobserve","Raf","_timer","lastTime","loop","now","newSize","getBoundingClientRect","size","requestAnimationFrame","cancelAnimationFrame","observer","ResizeSensor","_sensor","_element","_listener","sensor","InterfaceColors","Label","_text","_makeText","_textKeys","propValue","_setMaxDimentions","_maybeUpdateHTMLColor","textAlign","textVisible","htmlElement","getText","getAccessibleText","PointedRectangle","bwh","xtl","ytl","xbl","d2","moveTo","stemX","lineTo","arcTo","stemY","closePath","Tooltip","_label","_updateBackground","_updateTextColor","tooltipContainer","_htmlContentHovered","_handleReaderAnnouncement","_tooltips","readerAlert","updateBackgroundColor","_keepHoverDp","outEvent","getEvent","_fillDp","_strokeDp","_labelDp","cw","parentW","parentH","layerMargin","_w","_h","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","_fx","_fy","animationDuration","animationEasing","NumberFormatter","bns","sns","bs","suffix","formatted","Intl","NumberFormat","details","parseFormat","positive","negative","zero","mod","decimals","active","applyFormat","thousandSeparator","translateEmpty","decimalSeparator","_part","item","parsed","partFormat","mods","modSpacing","thousands","passive","interval","applyPrefix","ol","parseFloat","toPrecision","exp","toExponential","toFixed","digits","exponent","zeros","ints","ip","intsr","reverse","c","separator","decs","prefixes","newvalue","applied","k","parseDate","year","month","hour","minute","second","millisecond","weekday","formatToParts","toUTCDate","Timezone","DateTimeFormat","hour12","fractionalSecondDigits","_dtf","convertLocal","offset","offsetUTC","userOffset","setUTCMinutes","getUTCMinutes","newUserOffset","DateFormatter","ignoreTimezone","locales","fullYear","minutes","seconds","milliseconds","timestamp","getUTCMonth","getUTCHours","getUTCSeconds","getUTCMilliseconds","getDay","getHours","getMinutes","getSeconds","getMilliseconds","_getMonth","_getShortMonth","translateFunc","_getShortWeekday","_getWeekday","firstDayOfWeek","tz","tzh","tzm","toISOString","toUTCString","dateFormat","_months","_shortMonths","_weekdays","_shortWeekdays","parse","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","week","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","millisecondDigits","zone","iso","regex","resolveMonth","resolveShortMonth","setUTCFullYear","isAm","ts","resolveTimezoneOffset","dir","isDefault","translateAll","list","DurationFormatter","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","getFormat","dirs","absolute","_unitAliases","tstamp","toTimeStamp","unit","_toTimeUnit","unitValue","_getUnitValue","code","maxValue","maxUnit","getValueUnit","currentUnit","ms","_getUnitValues","timeUnit","Language","en","prompt","translation","translateAny","setTranslationAny","setTranslationsAny","translations","Theme","setupDefaultRules","themeClass","_rules","ruleRaw","setColor","ic","DefaultTheme","horizontalLayout","verticalLayout","bind","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonDisabled","primaryButtonTextDisabled","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabled","passOptions","lightness","colors","reuse","startIndex","interpolationDuration","interpolationEasing","tooltipX","tooltipY","setStateOnChildren","pinchZoom","maxZoomLevel","minZoomLevel","zoomStep","maxPanOut","gap","colorOpacity","checkered","centered","horizontalGap","verticalGap","density","minOpacity","maxOpacity","fillField","strokeField","nameField","layer","clickTarget","ariaChecked","focusable","role","cornerRadiusBL","cornerRadiusTL","cornerRadiusBR","cornerRadiusTR","populateText","stepCount","fontFamily","fontSize","textType","inside","baseRadius","orientation","editOn","multiLine","pointerBaseWidth","cornerRadius","shiftRadius","dRadius","dInnerRadius","locationX","locationY","getFillFromSprite","getStrokeFromSprite","autoTextColor","forceInactive","ariaValueMin","ariaValueMax","ariaLive","labelText","spikes","innerRadius","rotationStep","Matrix","tx","ty","setTransform","pivotX","pivotY","origin","applyInverse","append","matrix","a1","b1","c1","prepend","tx1","TAU","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","approxUnitArc","ang1","ang2","tan","x1","y1","x2","y2","vectorAngle","ux","uy","vx","vy","dot","acos","_ref2","px","py","cx","cy","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","largeArcFlag","_ref2$sweepFlag","sweepFlag","curves","pxp","pyp","lambda","sqrt","_getArcCenter","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","getArcCenter","_getArcCenter2","arr","isArray","_arr","_n","_d","_e","_s","_i","err","sliceIterator","TypeError","_slicedToArray","ratio","segments","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","assertBinary","eachTargets","hitTarget","onPointerEvent","touches","changedTouches","isTainted","createElement","getContext","willReadFrequently","drawImage","getImageData","console","warn","clearCanvas","view","CanvasPivot","CanvasDisplayObject","renderer","subStatus","status","_layer","_removeObject","getLayer","dirty","getCanvas","defaultLayer","margin","_ghostLayer","setMargin","layers","registerChildLayer","resizeLayer","resizeGhost","_addBounds","_bounds","_getColorId","_colorId","paintId","_isInteractive","_forceInteractive","_isInteractiveMask","_matrix","getLocalMatrix","_uMatrix","bn","_addEvent","_localMatrix","_transform","_transformMargin","_transformLayer","render","_omitTainted","ghostLayer","ghostContext","save","_runPath","clip","globalAlpha","compoundAlpha","_render","restore","tainted","_hovering","dragging","_dragging","some","shouldCancelTouch","tapToActivate","_touchActive","CanvasContainer","_children","_childLayers","deep","setPoint","Op","colorize","_context","_forceColor","colorizeGhost","forceColor","pathGhost","addBounds","BeginPath","beginPath","BeginFill","fillStyle","EndFill","clearShadow","EndStroke","LineStyle","strokeStyle","lineWidth","LineDash","dash","LineDashOffset","dashOffset","lineDashOffset","DrawRect","rect","DrawCircle","DrawEllipse","radiusX","radiusY","ellipse","Arc","startAngle","endAngle","anticlockwise","arcBounds","minX","minY","maxX","maxY","bpoints","fromAngle","toAngle","pt","ArcTo","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","QuadraticCurveTo","quadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","CanvasGraphics","_operations","_pushOp","op","_fillAlpha","_hasShadows","_strokeAlpha","drawCircle","drawEllipse","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","layerDirty","globalCompositeOperation","renderDetached","CanvasText","_textInfo","_shared","direction","textBaseline","_prerender","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","style2","fontVariant","_measure","line","_index","textChunks","fillText","thickness","metrics","_measureText","actualBoundingBoxLeft","actualBoundingBoxRight","_ignoreFontWeight","navigator","vendor","rtl","truncate","wrap","refText","lines","currentStyle","styleRestored","lineInfo","ascent","actualBoundingBoxAscent","actualBoundingBoxDescent","currentFormat","currentFill","currentChunkWidth","currentVerticalAlign","currentDecoration","skipFurtherText","firstTextChunk","leftoverChunks","verticalAlign","chunkWidth","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","_fitRatio","_originalScale","maxW","maxH","fallbackBreakWords","measureText","fakeMetrics","div","innerText","visibility","body","appendChild","bbox","fontBoundingBoxAscent","fontBoundingBoxDescent","CanvasTextStyle","CanvasRadialText","_renderCircular","deltaAngle","inward","align","kerning","clockwise","shouldReverse","_textReversed","maxAngle","midAngle","textHeight","lineStartAngle","rotate","angleShift","charWidth","_measureCircular","chars","rtlChar","splitPattern","segment","CanvasImage","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","CanvasRendererEvent","originalPoint","identifier","CanvasRenderer","GhostLayer","_patternCanvas","devicePixelRatio","setAttribute","_layerDom","exportableView","_touchActiveTimeout","_delayTouchDeactivate","prevent","obj","resetImageArray","imageArray","tapToActivateTimeout","debugGhostView","createLinearGradient","createRadialGradient","radius1","radius2","graphics","_patternContext","clearRect","makeRadialText","makePicture","resize","_calculatedWidth","_calculatedHeight","realWidth","realHeight","calculatedWidth","calculatedHeight","_realWidth","_realHeight","createDetachedLayer","CanvasLayer","getLayerByOrder","existingLayer","insertBefore","_dirtyLayers","_lastPointerMoveEvent","_dispatchGlobalMousemove","distributeId","_colorMap","_adjustBoundingBox","DOMRect","adjustPoint","clientX","clientY","widthScale","heightScale","_getHitTarget","pixel","data","colorId","getObjectAtPoint","getImageArray","_withEvents","dispatching","cleanup","disposed","_dispatchEventAll","interactionsEnabled","_dispatchEvent","dispatched","_dispatchMousedown","originalTarget","button","dragged","_mousedown","delete","_replacedCursorStyle","_dispatchGlobalMouseup","_dispatchDragMove","_dispatchDragEnd","clickevent","_dispatchDoubleClick","_dispatchWheel","_makeSharedEvent","_onPointerEvent","timer","_initEvent","mouseup","pointercancel","mousedown","mousemove","canvasWidth","canvasHeight","maxScale","maintainPixelRatio","canvases","forceRender","needRerender","exportableContext","extraX","extraY","clientWidth","clientHeight","domWidth","domHeight","_resolution","_width","_height","rAF","fps","Root","accessible","_a11yD","useSafeResolution","HTMLElement","getElementById","rootElements","inner","tooltipContainerBounds","_tooltipContainerSettings","_inner","_updateComputedStyles","_init","moveDOM","childNodes","_initResizeSensor","_handleLogo","_logo","offsetWidth","offsetHeight","_showBranding","logo","open","_getRealSize","_getCalculatedSize","calculateSize","tabindex","rootContainer","htmlElementContainer","_htmlElementContainer","overflow","readerAlertElement","_readerAlertElement","focusElementContainer","_focusElementContainer","tooltipElementContainer","_tooltipElementContainer","eventKey","_isShift","shiftKey","focusedSprite","_focusedSprite","downEvent","activeElement","focus","dragOffsetX","dragOffsetY","_keyboardDragPoint","moveEvent","upEvent","group","items","_tabindexes","lastIndex","el","_startTicker","setThemes","_addTooltip","_hasLicense","_resizeSensorDisposer","autoResize","_focusElementDirty","_updateCurrentFocus","_runTickers","_tickers","_runAnimations","running","_animations","_isDirtyAnimation","_runDirties","allParents","_isDirtyParents","_dirtyParents","uid","objects","_isDirty","depths","_dirtyBounds","_positionHTMLElements","dirtyPositions","_dirtyPositions","_renderFrame","_updateTick","_checkComputedStyles","animationDone","_runTicker","_ticker","_paused","_runTickerNow","endTime","performance","updateTick","_markDirty","_markDirtyRedraw","eachFrame","markDirtyGlobal","_isDisposed","innerHTML","tooltipContainerSettings","_tooltip","_invalidateTabindexes","aindex","bindex","groups","_moveFocusElement","_makeFocusElement","_decorateFocusElement","_positionFocusElement","focusElement","removeAttribute","ariaCurrent","ariaSelected","ariaOrientation","ariaValueNow","ariaValueText","ariaControls","getAttribute","tabIndex","_handleFocus","_handleBlur","_hideFocusElement","padding","focusPadding","_getSpriteByFocusElement","_focusNext","focusableElements","querySelectorAll","tooltipElement","_makeTooltipElement","parentElement","documentPointToRoot","scaleWidth","scaleHeight","rootPointToDocument","styles","getComputedStyle","fontHash","changed","_fontHash","_invalidateLabelBounds","licenses","_licenseApplied","_makeHTMLElement","boxSizing","_htmlEnabledContainers","setting","transform","transformOrigin","DataProcessor","_checkFeatures","_checkDates","_checkNumbers","_checkColors","_checkEmpty","_checkDeepFeatures","deepFields","where","steps","_checkDeep","processMany","row","processRow","lookupKey","_maybeToEmpty","_maybeToNumber","_maybeToDate","_maybeToColor","Circle","Bullet","series","_positionBullet","ColorSet","reset","generateColors","pass","currentStep","timeUnitDurations","getNextUnit","getDuration","getIntervalDuration","getDateIntervalDuration","firstDateOfWeek","firstTime","checkChange","timeOne","timeTwo","dateOne","dateTwo","timeZoneOffset1","timeZoneOffset2","nextUnit","roun","time","firstDate","timeZoneOffset","difference","unitCount","setTime","setUTCHours","setUTCSeconds","setUTCMilliseconds","setUTCMonth","wday","weekDay","newTimeZoneOffset","isNaN","tzoffset","parsedDate","offsetDif","newDiff","chooseInterval","gridCount","intervals","intervalDuration","XYChartDefaultTheme","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","minGridDistance","minPosition","maxPosition","behavior","snapToSeriesBy","moveThreshold","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","startLocation","endLocation","fillRule","axisFill","gridIntervals","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","axis","endValue","baseInterval","gridInterval","baseValue","logarithmic","autoZoom","maskBullets","stackToNegative","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","connect","autoGapCount","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","Chart","SerialChart","seriesContainer","_removeSeries","patterns","_processSeries","chart","_placeBulletsContainer","_removeBulletsContainer","RoundedRectangle","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","Button","icon","XYChart","chartContainer","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","topPlotContainer","xAxes","yAxes","zoomOutButton","zoomOut","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","gridContainer","_unstack","_posXDp","_posYDp","xAxis","markDirtyExtremes","yAxis","snapToSeries","handleWheel","wheelX","wheelY","plotPoint","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","sign","local","_downStartX","_downEndX","_downStartY","_downEndY","_panStart","_panEnd","_dispatchWheelAnimation","_isPanning","_movePoints","_handlePinch","scrollbarX","panStart","panEnd","scrollbarY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","dataItems","endIndex","tooltipDataItem","closestItem","minDistance","distance","showDataItemTooltip","handleMove","_updateCursor","updateCursor","_addCursor","_colorize","_setChart","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","getTooltipText","rightAxesContainer","_handleZoomOut","_fixPosition","_markDirtyAxes","_seriesAdded","colorSet","patternSet","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","_removeAxis","processChart","axisParent","gridParent","topGridParent","_updateChartLayout","processAxis","updateGrips","inPlot","otherCharts","_otherCharts","global","chartPlotContainer","documentPoint","chartRoot","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","prevBottom","ListData","incrementRef","decrementRef","processor","DataItem","markDirtyValues","disposeDataItem","showDataItem","hideDataItem","Component","_dataItems","_data","_onDataClear","_updateFields","_mainDataItems","_markDirtyGroup","_dataChanged","_makeDataItem","processDataItem","properties","bullets","_afterDataChange","valueFields","_valueFields","_valueFieldsF","fieldKey","workingKey","fields","_fields","_fieldsF","makeDataItem","pushDataItem","_valuesDirty","inited","_dataGrouped","Axis","labelsContainer","axisHeader","axisRanges","_processAxisRange","ghostLabel","makeLabel","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_series","_createAssets","_rangesDirty","_prepareDataItem","above","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","_updateTooltipBounds","updateTooltipBounds","axisHeadersContainer","_toggleFHDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","minor","_a","_b","_c","labels","makeGrid","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","gWidth","updateLabel","_cursorPosition","_snapToSeries","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","handleCursorShow","handleCursorHide","processSeriesDataItem","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","someDirty","_getMinMax","_handleSizeDirty","getMM","letter","_getSelectionMinMax","_groupData","_handleRangeChange","_prepareAxisItems","_baseValue","_dseHandled","_formatText","numberFormat","formatter","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","_minRealLog","log","LOG10E","minorLabelsEnabled","minorGridEnabled","stepPower","stepAdjusted","minorGridCount","minorStep","nextValue","minorValue","_adjustMinMax","minorDataItem","minorDataItems","minorLabel","j","valueToPosition","endPosition","fillEndPosition","labelEndPosition","labelEndValue","updateGrid","updateFill","updateBullet","positionToValue","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","positionToCoordinate","getY","getDataItemCoordinateX","_cellLocation","axisLocation","getDataItemPositionX","getStackedXValueWorking","getDataItemCoordinateY","getDataItemPositionY","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","_fixMin","_fixMax","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","_minReal","_maxReal","smin","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","maxAdapted","_getDelta","strictMinMaxSelection","strict","decCount","_fixZoomFactor","_saveMinMax","power","_min","_max","strictMode","extra","stepDivisor","maxPrecision","ceiledStep","maxCount","minCount","_adjustPosition","extraDecimals","oldDiff","fieldName","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","nextPosition","DateAxis","_setBaseInterval","_baseDuration","baseMainDuration","groupInterval","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","baseDuration","_dataSets","baseAxis","_valueYFields","_valueXFields","groupCallback","groupOriginals","previousTime","dataSetId","groupFieldValues","workingFields","prevNewDataItem","roundedTime","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","modifiedDifference","newId","endIndex2","firstDataItem","lastDataItem","lastDate","_adjustStartIndex","_strictMode","_intervalDuration","_getM","_getMinorInterval","minorGridInterval","nextGridUnit","previousValue","formats","minorDuration","minorTimeUnit","minorCount","mmm","previousMinorValue","minorFormats","minorEndValue","startTime","_updateDates","_date","close","cellLocation","openValue","closeValue","NaN","adjustPosition","snap","diValue","first","nextItem","value1","zoomToDates","futureGroupInterval","baseMin","baseMax","futureMin","futureMax","positionToDate","dateToPosition","dtime","tooltipValue","_nextTime","segmentedLine","firstGroup","firstPoint","points","Line","Tick","AxisTick","Grid","AxisLabel","AxisRenderer","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","_getPan","_point1","_point2","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","axisChildren","point1","point2","_ls","_lc","positionToPoint","bulletPosition","previousBullet","previousSprite","x0","fillDrawMethod","AxisRendererY","y0","Series","_handleBullets","getDataItemById","_makeBullets","_shouldMakeBullet","bulletFunction","_makeBullet","_makeBulletReal","addBullet","_aggregatesCalculated","_selectionAggregatesCalculated","baseValueSeries","_dataProcessed","_calculateAggregates","_psi","_pei","markerRectangle","legendDataItem","absSum","low","high","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","adjustedStartIndex","_getBase","minValue","dataField","neutral","customFunction","propertyValue","_hideBullets","_positionBullets","_bullet","_getItemReaderLabel","_super","_sequencedShowHide","realDuration","valueLabel","txt","hoverDataItem","unhoverDataItem","XYSeries","_removeAxisRange","_makeFieldNames","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","valueYFields","minBulletDistance","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","stacked","_stack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_stackDirty","_showBullets","_selectionProcessed","vcx","vcy","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mainContainer","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_stackedSeries","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","createLegendMarker","_axesDirty","_markDataSetDirty","getPoint","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","_handleDataSetChange","dataSet","mainDataItems","_markDirtyStack","stackedSeries","_skipped","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","_getTooltipTarget","_emptyDataItem","_shouldInclude","_position","resetExtremes","minSelection","dl","Linear","prototype","areaStart","_line","areaEnd","lineStart","_point","lineEnd","pi","epsilon","tauEpsilon","strings","n","Path","_x0","_y0","_x1","_y1","_append","appendRound","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","a0","ccw","da","withPath","shape","RangeError","defined","constant","buffer","defined0","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","LineSeries","strokes","fills","_fillGenerator","makeStroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xField","yField","xOpenField","yOpenField","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","openLocationX","openLocationY","fillVisible","getOpen","o","rangeStrokeTemplate","rangeFillTemplate","valueX","valueY","_getPoints","_endLine","_drawStroke","_drawFill","iPoint","xPos0","yPos0","stackToItemX","stackToItemY","closeIPoint","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","marker","disabledColor","legend","XYCursor","_drawLines","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","_handleLineMove","ctrlKey","_alwaysShow","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_getPoint","_toX","_toY","_handleMove","_handleCursorDown","_handleCursorUp","_lastPoint2","selection","_inPlot","rootPoint","_getPosition","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","_updateLines","_updateSelection","_templateObject","Styles","styled","raw","vendorLogo","TELCEL","ALTAN","ATT","LogoAtt","BAIT","MEGA","vendorData","vendorColors","SupersetPluginChartCscLine","props","numChart","random","imageLogo","useState","useLayoutEffect","am5","am5themes_Animated","am5xy","valueYField","valueXField","circle","colorToFill","React","alt"],"sourceRoot":""}