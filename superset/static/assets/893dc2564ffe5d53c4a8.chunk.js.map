{"version":3,"file":"893dc2564ffe5d53c4a8.chunk.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-core/src/time-comparison/customTimeRangeDecode.ts","webpack://superset/./packages/superset-ui-core/src/time-comparison/fetchTimeRange.ts","webpack://superset/./packages/superset-ui-core/src/time-comparison/getTimeOffset.ts","webpack://superset/./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/useOverflowDetection.ts","webpack://superset/./plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/PopKPI.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { SEPARATOR } from './fetchTimeRange';\nimport {\n  CustomRangeDecodeType,\n  CustomRangeType,\n  DateTimeGrainType,\n  DateTimeModeType,\n} from './types';\n\nconst iso8601 = String.raw`\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.\\d+)?(?:(?:[+-]\\d\\d:\\d\\d)|Z)?`;\nconst datetimeConstant = String.raw`(?:TODAY|NOW)`;\nconst grainValue = String.raw`[+-]?[1-9][0-9]*`;\nconst grain = String.raw`YEAR|QUARTER|MONTH|WEEK|DAY|HOUR|MINUTE|SECOND`;\nconst CUSTOM_RANGE_EXPRESSION = RegExp(\n  String.raw`^DATEADD\\(DATETIME\\(\"(${iso8601}|${datetimeConstant})\"\\),\\s(${grainValue}),\\s(${grain})\\)$`,\n  'i',\n);\nexport const ISO8601_AND_CONSTANT = RegExp(\n  String.raw`^${iso8601}$|^${datetimeConstant}$`,\n  'i',\n);\nconst DATETIME_CONSTANT = ['now', 'today'];\nconst SEVEN_DAYS_AGO = new Date();\nSEVEN_DAYS_AGO.setHours(0, 0, 0, 0);\n\nconst MIDNIGHT = new Date();\nMIDNIGHT.setHours(0, 0, 0, 0);\n\nconst defaultCustomRange: CustomRangeType = {\n  sinceDatetime: SEVEN_DAYS_AGO.setDate(\n    SEVEN_DAYS_AGO.getDate() - 7,\n  ).toString(),\n  sinceMode: 'relative',\n  sinceGrain: 'day',\n  sinceGrainValue: -7,\n  untilDatetime: MIDNIGHT.toString(),\n  untilMode: 'specific',\n  untilGrain: 'day',\n  untilGrainValue: 7,\n  anchorMode: 'now',\n  anchorValue: 'now',\n};\n\nexport const customTimeRangeDecode = (\n  timeRange: string,\n): CustomRangeDecodeType => {\n  const splitDateRange = timeRange.split(SEPARATOR);\n\n  if (splitDateRange.length === 2) {\n    const [since, until] = splitDateRange;\n\n    // specific : specific\n    if (ISO8601_AND_CONSTANT.test(since) && ISO8601_AND_CONSTANT.test(until)) {\n      const sinceMode = (\n        DATETIME_CONSTANT.includes(since) ? since : 'specific'\n      ) as DateTimeModeType;\n      const untilMode = (\n        DATETIME_CONSTANT.includes(until) ? until : 'specific'\n      ) as DateTimeModeType;\n      return {\n        customRange: {\n          ...defaultCustomRange,\n          sinceDatetime: since,\n          untilDatetime: until,\n          sinceMode,\n          untilMode,\n        },\n        matchedFlag: true,\n      };\n    }\n\n    // relative : specific\n    const sinceCapturedGroup = since.match(CUSTOM_RANGE_EXPRESSION);\n    if (\n      sinceCapturedGroup &&\n      ISO8601_AND_CONSTANT.test(until) &&\n      since.includes(until)\n    ) {\n      const [dttm, grainValue, grain] = sinceCapturedGroup.slice(1);\n      const untilMode = (\n        DATETIME_CONSTANT.includes(until) ? until : 'specific'\n      ) as DateTimeModeType;\n      return {\n        customRange: {\n          ...defaultCustomRange,\n          sinceGrain: grain as DateTimeGrainType,\n          sinceGrainValue: parseInt(grainValue, 10),\n          sinceDatetime: dttm,\n          untilDatetime: dttm,\n          sinceMode: 'relative',\n          untilMode,\n        },\n        matchedFlag: true,\n      };\n    }\n\n    // specific : relative\n    const untilCapturedGroup = until.match(CUSTOM_RANGE_EXPRESSION);\n    if (\n      ISO8601_AND_CONSTANT.test(since) &&\n      untilCapturedGroup &&\n      until.includes(since)\n    ) {\n      const [dttm, grainValue, grain] = [...untilCapturedGroup.slice(1)];\n      const sinceMode = (\n        DATETIME_CONSTANT.includes(since) ? since : 'specific'\n      ) as DateTimeModeType;\n      return {\n        customRange: {\n          ...defaultCustomRange,\n          untilGrain: grain as DateTimeGrainType,\n          untilGrainValue: parseInt(grainValue, 10),\n          sinceDatetime: dttm,\n          untilDatetime: dttm,\n          untilMode: 'relative',\n          sinceMode,\n        },\n        matchedFlag: true,\n      };\n    }\n\n    // relative : relative\n    if (sinceCapturedGroup && untilCapturedGroup) {\n      const [sinceDttm, sinceGrainValue, sinceGrain] = [\n        ...sinceCapturedGroup.slice(1),\n      ];\n      const [untilDttm, untilGrainValue, untilGrain] = [\n        ...untilCapturedGroup.slice(1),\n      ];\n      if (sinceDttm === untilDttm) {\n        return {\n          customRange: {\n            ...defaultCustomRange,\n            sinceGrain: sinceGrain as DateTimeGrainType,\n            sinceGrainValue: parseInt(sinceGrainValue, 10),\n            sinceDatetime: sinceDttm,\n            untilGrain: untilGrain as DateTimeGrainType,\n            untilGrainValue: parseInt(untilGrainValue, 10),\n            untilDatetime: untilDttm,\n            anchorValue: sinceDttm,\n            sinceMode: 'relative',\n            untilMode: 'relative',\n            anchorMode: sinceDttm === 'now' ? 'now' : 'specific',\n          },\n          matchedFlag: true,\n        };\n      }\n    }\n  }\n\n  return {\n    customRange: defaultCustomRange,\n    matchedFlag: false,\n  };\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport rison from 'rison';\nimport { isEmpty } from 'lodash';\nimport {\n  SupersetClient,\n  getClientErrorObject,\n  ensureIsArray,\n} from '@superset-ui/core';\n\nexport const SEPARATOR = ' : ';\n\nexport const buildTimeRangeString = (since: string, until: string): string =>\n  `${since}${SEPARATOR}${until}`;\n\nconst formatDateEndpoint = (dttm: string, isStart?: boolean): string =>\n  dttm.replace('T00:00:00', '') || (isStart ? '-∞' : '∞');\n\nexport const formatTimeRange = (\n  timeRange: string,\n  columnPlaceholder = 'col',\n) => {\n  const splitDateRange = timeRange.split(SEPARATOR);\n  if (splitDateRange.length === 1) return timeRange;\n  return `${formatDateEndpoint(\n    splitDateRange[0],\n    true,\n  )} ≤ ${columnPlaceholder} < ${formatDateEndpoint(splitDateRange[1])}`;\n};\n\nexport const formatTimeRangeComparison = (\n  initialTimeRange: string,\n  shiftedTimeRange: string,\n  columnPlaceholder = 'col',\n) => {\n  const splitInitialDateRange = initialTimeRange.split(SEPARATOR);\n  const splitShiftedDateRange = shiftedTimeRange.split(SEPARATOR);\n  return `${columnPlaceholder}: ${formatDateEndpoint(\n    splitInitialDateRange[0],\n    true,\n  )} to ${formatDateEndpoint(splitInitialDateRange[1])} vs\n  ${formatDateEndpoint(splitShiftedDateRange[0], true)} to ${formatDateEndpoint(\n    splitShiftedDateRange[1],\n  )}`;\n};\n\nexport const fetchTimeRange = async (\n  timeRange: string,\n  columnPlaceholder = 'col',\n  shifts?: string[],\n) => {\n  let query;\n  let endpoint;\n  if (!isEmpty(shifts)) {\n    const timeRanges = ensureIsArray(shifts).map(shift => ({\n      timeRange,\n      shift,\n    }));\n    query = rison.encode_uri([{ timeRange }, ...timeRanges]);\n    endpoint = `/api/v1/time_range/?q=${query}`;\n  } else {\n    query = rison.encode_uri(timeRange);\n    endpoint = `/api/v1/time_range/?q=${query}`;\n  }\n  try {\n    const response = await SupersetClient.get({ endpoint });\n    if (isEmpty(shifts)) {\n      const timeRangeString = buildTimeRangeString(\n        response?.json?.result[0]?.since || '',\n        response?.json?.result[0]?.until || '',\n      );\n      return {\n        value: formatTimeRange(timeRangeString, columnPlaceholder),\n      };\n    }\n    const timeRanges = response?.json?.result.map((result: any) =>\n      buildTimeRangeString(result.since, result.until),\n    );\n    return {\n      value: timeRanges\n        .slice(1)\n        .map((timeRange: string) =>\n          formatTimeRangeComparison(\n            timeRanges[0],\n            timeRange,\n            columnPlaceholder,\n          ),\n        ),\n    };\n  } catch (response) {\n    const clientError = await getClientErrorObject(response);\n    return {\n      error: clientError.message || clientError.error || response.statusText,\n    };\n  }\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEmpty } from 'lodash';\nimport { ensureIsArray } from '../utils';\nimport { customTimeRangeDecode } from './customTimeRangeDecode';\n\nconst DAY_IN_MS = 24 * 60 * 60 * 1000;\n\nexport const parseDttmToDate = (\n  dttm: string,\n  isEndDate = false,\n  computingShifts = false,\n) => {\n  const now = new Date();\n  if (dttm === 'now' || dttm === 'No filter' || dttm === '') {\n    return now;\n  }\n\n  if (dttm === 'today') {\n    now.setHours(0, 0, 0, 0);\n    return now;\n  }\n\n  if (computingShifts) {\n    now.setHours(-now.getTimezoneOffset() / 60, 0, 0, 0);\n  } else {\n    now.setHours(0, 0, 0, 0);\n  }\n\n  if (isEndDate && dttm?.includes('Last')) {\n    return now;\n  }\n\n  switch (dttm) {\n    case 'Last day':\n      now.setUTCDate(now.getUTCDate() - 1);\n      return now;\n    case 'Last week':\n      now.setUTCDate(now.getUTCDate() - 7);\n      return now;\n    case 'Last month':\n      now.setUTCMonth(now.getUTCMonth() - 1);\n      return now;\n    case 'Last quarter':\n      now.setUTCMonth(now.getUTCMonth() - 3);\n      return now;\n    case 'Last year':\n      now.setUTCFullYear(now.getUTCFullYear() - 1);\n      return now;\n    case 'previous calendar week':\n      if (isEndDate) {\n        now.setDate(now.getDate() - now.getDay() + 1); // end date is the last day of the previous week (Sunday)\n      } else {\n        now.setDate(now.getDate() - now.getDay() - 6); // start date is the first day of the previous week (Monday)\n      }\n      return now;\n    case 'previous calendar month':\n      if (isEndDate) {\n        now.setDate(1); // end date is the last day of the previous month\n      } else {\n        now.setDate(1); // start date is the first day of the previous month\n        now.setMonth(now.getMonth() - 1);\n      }\n      return now;\n    case 'previous calendar year':\n      if (isEndDate) {\n        now.setFullYear(now.getFullYear(), 0, 1); // end date is the last day of the previous year\n      } else {\n        now.setFullYear(now.getFullYear() - 1, 0, 1); // start date is the first day of the previous year\n      }\n      return now;\n    default:\n      break;\n  }\n  if (dttm?.includes('ago')) {\n    const parts = dttm.split(' ');\n    const amount = parseInt(parts[0], 10);\n    const unit = parts[1];\n    switch (unit) {\n      case 'day':\n      case 'days':\n        now.setUTCDate(now.getUTCDate() - amount);\n        break;\n      case 'week':\n      case 'weeks':\n        now.setUTCDate(now.getUTCDate() - amount * 7);\n        break;\n      case 'month':\n      case 'months':\n        now.setUTCMonth(now.getUTCMonth() - amount);\n        break;\n      case 'year':\n      case 'years':\n        now.setUTCFullYear(now.getUTCFullYear() - amount);\n        break;\n      default:\n        break;\n    }\n    return now;\n  }\n  const parts = dttm?.split('-');\n  let parsed: Date | null = null;\n  if (parts && !isEmpty(parts)) {\n    if (parts.length === 1) {\n      parsed = new Date(Date.UTC(parseInt(parts[0], 10), 0));\n    } else if (parts.length === 2) {\n      parsed = new Date(\n        Date.UTC(parseInt(parts[0], 10), parseInt(parts[1], 10) - 1),\n      );\n    } else if (parts.length === 3) {\n      parsed = new Date(\n        parseInt(parts[0], 10),\n        parseInt(parts[1], 10) - 1,\n        parseInt(parts[2], 10),\n      );\n    } else {\n      parsed = new Date(dttm);\n    }\n  } else {\n    parsed = new Date(dttm);\n  }\n  if (parsed && !Number.isNaN(parsed.getTime())) {\n    if (computingShifts) {\n      parsed.setHours(-parsed.getTimezoneOffset() / 60, 0, 0, 0);\n    } else {\n      parsed.setHours(0, 0, 0, 0);\n    }\n    return parsed;\n  }\n  // Return null if the string cannot be parsed into a date\n  return null;\n};\n\nexport const computeCustomDateTime = (\n  dttm: string,\n  grain: string,\n  grainValue: number,\n) => {\n  let parsed: Date;\n  if (dttm === 'now' || dttm === 'today') {\n    parsed = new Date();\n  } else {\n    parsed = new Date(dttm);\n  }\n  if (!Number.isNaN(parsed.getTime())) {\n    switch (grain) {\n      case 'second':\n        parsed.setSeconds(parsed.getSeconds() + grainValue);\n        break;\n      case 'minute':\n        parsed.setMinutes(parsed.getMinutes() + grainValue);\n        break;\n      case 'hour':\n        parsed.setHours(parsed.getHours() + grainValue);\n        break;\n      case 'day':\n        parsed.setDate(parsed.getDate() + grainValue);\n        break;\n      case 'week':\n        parsed.setDate(parsed.getDate() + grainValue * 7);\n        break;\n      case 'month':\n        parsed.setMonth(parsed.getMonth() + grainValue);\n        break;\n      case 'quarter':\n        parsed.setMonth(parsed.getMonth() + grainValue * 3);\n        break;\n      case 'year':\n        parsed.setFullYear(parsed.getFullYear() + grainValue);\n        break;\n      default:\n        break;\n    }\n    return parsed;\n  }\n  return null;\n};\n\ntype TimeOffsetArgs = {\n  timeRangeFilter: any;\n  shifts: string[];\n  startDate: string;\n  includeFutureOffsets?: boolean;\n};\n\nexport const getTimeOffset = ({\n  timeRangeFilter,\n  shifts,\n  startDate,\n  includeFutureOffsets = true,\n}: TimeOffsetArgs): string[] => {\n  const { customRange, matchedFlag } = customTimeRangeDecode(\n    timeRangeFilter?.comparator ?? '',\n  );\n  let customStartDate: Date | null = null;\n  let customEndDate: Date | null = null;\n  if (matchedFlag) {\n    // Compute the start date and end date using the custom range information\n    const {\n      sinceDatetime,\n      sinceMode,\n      sinceGrain,\n      sinceGrainValue,\n      untilDatetime,\n      untilMode,\n      untilGrain,\n      untilGrainValue,\n    } = { ...customRange };\n    if (sinceMode !== 'relative') {\n      if (sinceMode === 'specific') {\n        customStartDate = new Date(sinceDatetime);\n      } else {\n        customStartDate = parseDttmToDate(sinceDatetime, false, true);\n      }\n    } else {\n      customStartDate = computeCustomDateTime(\n        sinceDatetime,\n        sinceGrain,\n        sinceGrainValue,\n      );\n    }\n    customStartDate?.setHours(0, 0, 0, 0);\n    if (untilMode !== 'relative') {\n      if (untilMode === 'specific') {\n        customEndDate = new Date(untilDatetime);\n      } else {\n        customEndDate = parseDttmToDate(untilDatetime, false, true);\n      }\n    } else {\n      customEndDate = computeCustomDateTime(\n        untilDatetime,\n        untilGrain,\n        untilGrainValue,\n      );\n    }\n    customEndDate?.setHours(0, 0, 0, 0);\n  }\n  const isCustom = shifts?.includes('custom');\n  const isInherit = shifts?.includes('inherit');\n  let customStartDateTime: number | undefined;\n  if (isCustom) {\n    if (matchedFlag) {\n      customStartDateTime = new Date(\n        new Date(startDate).setUTCHours(\n          new Date(startDate).getTimezoneOffset() / 60,\n          0,\n          0,\n          0,\n        ),\n      ).getTime();\n    } else {\n      customStartDateTime = parseDttmToDate(startDate)?.getTime();\n    }\n  }\n  const [startStr, endStr] = (timeRangeFilter?.comparator ?? '')\n    .split(' : ')\n    .map((date: string) => date.trim());\n  const filterStartDateTime =\n    (customStartDate ?? parseDttmToDate(startStr, false, false))?.getTime() ||\n    0;\n  const filterEndDateTime =\n    (\n      customEndDate ?? parseDttmToDate(endStr || startStr, true, false)\n    )?.getTime() || 0;\n\n  const customShift =\n    customStartDateTime &&\n    filterStartDateTime &&\n    Math.round((filterStartDateTime - customStartDateTime) / DAY_IN_MS);\n  const inInheritShift =\n    isInherit &&\n    filterEndDateTime &&\n    filterStartDateTime &&\n    Math.round((filterEndDateTime - filterStartDateTime) / DAY_IN_MS);\n\n  const newShifts = ensureIsArray(shifts)\n    .map(shift => {\n      if (shift === 'custom') {\n        if (customShift !== undefined && !Number.isNaN(customShift)) {\n          if (includeFutureOffsets && customShift < 0) {\n            return `${customShift * -1} days after`;\n          }\n          if (customShift >= 0 && filterStartDateTime) {\n            return `${customShift} days ago`;\n          }\n        }\n      }\n      if (shift === 'inherit') {\n        if (inInheritShift && !Number.isNaN(inInheritShift)) {\n          if (includeFutureOffsets && inInheritShift < 0) {\n            return `${inInheritShift * -1} days after`;\n          }\n          if (inInheritShift > 0) {\n            return `${inInheritShift} days ago`;\n          }\n        }\n      }\n      return shift;\n    })\n    .filter(shift => shift !== 'custom' && shift !== 'inherit');\n  return ensureIsArray(newShifts);\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useRef, useState } from 'react';\nimport { debounce } from 'lodash';\n\nexport const useOverflowDetection = (flexGap: number) => {\n  const symbolContainerRef = useRef<HTMLDivElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n\n  useEffect(() => {\n    let obs: ResizeObserver;\n    const symbolContainerElem = symbolContainerRef.current;\n    const wrapperElem = wrapperRef.current;\n    if (symbolContainerElem && wrapperElem) {\n      const symbolContainerChildrenElems = Array.from(\n        symbolContainerElem.children,\n      );\n      obs = new ResizeObserver(\n        debounce(() => {\n          const totalChildrenWidth = symbolContainerChildrenElems.reduce(\n            (acc, element) =>\n              // take symbol container's child's scroll width to account for the container growing with display: flex\n              acc + (element.firstElementChild?.scrollWidth ?? 0),\n            0,\n          );\n          if (\n            totalChildrenWidth +\n              flexGap * Math.max(symbolContainerChildrenElems.length - 1, 0) >\n            wrapperElem.clientWidth\n          ) {\n            setIsOverflowing(true);\n          } else {\n            setIsOverflowing(false);\n          }\n        }, 500),\n      );\n      obs.observe(document.body);\n      symbolContainerChildrenElems.forEach(elem => {\n        obs.observe(elem);\n      });\n    }\n    return () => obs?.disconnect();\n  }, [flexGap]);\n\n  return { isOverflowing, symbolContainerRef, wrapperRef };\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo, useState } from 'react';\nimport {\n  css,\n  ensureIsArray,\n  fetchTimeRange,\n  getTimeOffset,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { DEFAULT_DATE_PATTERN, Tooltip } from '@superset-ui/chart-controls';\nimport { isEmpty } from 'lodash';\nimport {\n  ColorSchemeEnum,\n  PopKPIComparisonSymbolStyleProps,\n  PopKPIComparisonValueStyleProps,\n  PopKPIProps,\n} from './types';\nimport { useOverflowDetection } from './useOverflowDetection';\n\nconst NumbersContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  overflow: auto;\n`;\n\nconst ComparisonValue = styled.div<PopKPIComparisonValueStyleProps>`\n  ${({ theme, subheaderFontSize }) => `\n    font-weight: ${theme.typography.weights.light};\n    display: flex;\n    justify-content: center;\n    font-size: ${subheaderFontSize || 20}px;\n    flex: 1 1 0px;\n  `}\n`;\n\nconst SymbolWrapper = styled.span<PopKPIComparisonSymbolStyleProps>`\n  ${({ theme, backgroundColor, textColor }) => `\n    background-color: ${backgroundColor};\n    color: ${textColor};\n    padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n    border-radius: ${theme.gridUnit * 2}px;\n    margin-right: ${theme.gridUnit}px;\n  `}\n`;\n\nexport default function PopKPI(props: PopKPIProps) {\n  const {\n    height,\n    width,\n    bigNumber,\n    prevNumber,\n    valueDifference,\n    percentDifferenceFormattedString,\n    headerFontSize,\n    subheaderFontSize,\n    comparisonColorEnabled,\n    comparisonColorScheme,\n    percentDifferenceNumber,\n    currentTimeRangeFilter,\n    startDateOffset,\n    shift,\n    dashboardTimeRange,\n  } = props;\n\n  const [comparisonRange, setComparisonRange] = useState<string>('');\n\n  useEffect(() => {\n    if (!currentTimeRangeFilter || (!shift && !startDateOffset)) {\n      setComparisonRange('');\n    } else if (!isEmpty(shift) || startDateOffset) {\n      const promise: any = fetchTimeRange(\n        dashboardTimeRange ?? (currentTimeRangeFilter as any).comparator,\n        currentTimeRangeFilter.subject,\n      );\n      Promise.resolve(promise).then((res: any) => {\n        const dates = res?.value?.match(DEFAULT_DATE_PATTERN);\n        const [parsedStartDate, parsedEndDate] = dates ?? [];\n        const newShift = getTimeOffset({\n          timeRangeFilter: {\n            ...currentTimeRangeFilter,\n            comparator: `${parsedStartDate} : ${parsedEndDate}`,\n          },\n          shifts: ensureIsArray(shift),\n          startDate: startDateOffset || '',\n        });\n        fetchTimeRange(\n          dashboardTimeRange ?? (currentTimeRangeFilter as any).comparator,\n          currentTimeRangeFilter.subject,\n          ensureIsArray(newShift),\n        ).then(res => {\n          const response: string[] = ensureIsArray(res.value);\n          const firstRange: string = response.flat()[0];\n          const rangeText = firstRange.split('vs\\n');\n          setComparisonRange(\n            rangeText.length > 1 ? rangeText[1].trim() : rangeText[0],\n          );\n        });\n      });\n    }\n  }, [currentTimeRangeFilter, shift, startDateOffset, dashboardTimeRange]);\n\n  const theme = useTheme();\n  const flexGap = theme.gridUnit * 5;\n  const wrapperDivStyles = css`\n    font-family: ${theme.typography.families.sansSerif};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${height}px;\n    width: ${width}px;\n    overflow: auto;\n  `;\n\n  const bigValueContainerStyles = css`\n    font-size: ${headerFontSize || 60}px;\n    font-weight: ${theme.typography.weights.normal};\n    text-align: center;\n    margin-bottom: ${theme.gridUnit * 4}px;\n  `;\n\n  const getArrowIndicatorColor = () => {\n    if (!comparisonColorEnabled || percentDifferenceNumber === 0) {\n      return theme.colors.grayscale.base;\n    }\n\n    if (percentDifferenceNumber > 0) {\n      // Positive difference\n      return comparisonColorScheme === ColorSchemeEnum.Green\n        ? theme.colors.success.base\n        : theme.colors.error.base;\n    }\n    // Negative difference\n    return comparisonColorScheme === ColorSchemeEnum.Red\n      ? theme.colors.success.base\n      : theme.colors.error.base;\n  };\n\n  const arrowIndicatorStyle = css`\n    color: ${getArrowIndicatorColor()};\n    margin-left: ${theme.gridUnit}px;\n  `;\n\n  const defaultBackgroundColor = theme.colors.grayscale.light4;\n  const defaultTextColor = theme.colors.grayscale.base;\n  const { backgroundColor, textColor } = useMemo(() => {\n    let bgColor = defaultBackgroundColor;\n    let txtColor = defaultTextColor;\n    if (comparisonColorEnabled && percentDifferenceNumber !== 0) {\n      const useSuccess =\n        (percentDifferenceNumber > 0 &&\n          comparisonColorScheme === ColorSchemeEnum.Green) ||\n        (percentDifferenceNumber < 0 &&\n          comparisonColorScheme === ColorSchemeEnum.Red);\n\n      // Set background and text colors based on the conditions\n      bgColor = useSuccess\n        ? theme.colors.success.light2\n        : theme.colors.error.light2;\n      txtColor = useSuccess\n        ? theme.colors.success.base\n        : theme.colors.error.base;\n    }\n\n    return {\n      backgroundColor: bgColor,\n      textColor: txtColor,\n    };\n  }, [\n    theme,\n    comparisonColorScheme,\n    comparisonColorEnabled,\n    percentDifferenceNumber,\n  ]);\n\n  const SYMBOLS_WITH_VALUES = useMemo(\n    () => [\n      {\n        symbol: '#',\n        value: prevNumber,\n        tooltipText: t('Data for %s', comparisonRange || 'previous range'),\n      },\n      {\n        symbol: '△',\n        value: valueDifference,\n        tooltipText: t('Value difference between the time periods'),\n      },\n      {\n        symbol: '%',\n        value: percentDifferenceFormattedString,\n        tooltipText: t('Percentage difference between the time periods'),\n      },\n    ],\n    [\n      comparisonRange,\n      prevNumber,\n      valueDifference,\n      percentDifferenceFormattedString,\n    ],\n  );\n\n  const { isOverflowing, symbolContainerRef, wrapperRef } =\n    useOverflowDetection(flexGap);\n\n  return (\n    <div css={wrapperDivStyles} ref={wrapperRef}>\n      <NumbersContainer\n        css={\n          isOverflowing &&\n          css`\n            width: fit-content;\n            margin: auto;\n            align-items: flex-start;\n          `\n        }\n      >\n        <div css={bigValueContainerStyles}>\n          {bigNumber}\n          {percentDifferenceNumber !== 0 && (\n            <span css={arrowIndicatorStyle}>\n              {percentDifferenceNumber > 0 ? '↑' : '↓'}\n            </span>\n          )}\n        </div>\n\n        <div\n          css={[\n            css`\n              display: flex;\n              justify-content: space-around;\n              gap: ${flexGap}px;\n              min-width: 0;\n              flex-shrink: 1;\n            `,\n            isOverflowing\n              ? css`\n                  flex-direction: column;\n                  align-items: flex-start;\n                  width: fit-content;\n                `\n              : css`\n                  align-items: center;\n                  width: 100%;\n                `,\n          ]}\n          ref={symbolContainerRef}\n        >\n          {SYMBOLS_WITH_VALUES.map((symbol_with_value, index) => (\n            <ComparisonValue\n              key={`comparison-symbol-${symbol_with_value.symbol}`}\n              subheaderFontSize={subheaderFontSize}\n            >\n              <Tooltip\n                id=\"tooltip\"\n                placement=\"top\"\n                title={symbol_with_value.tooltipText}\n              >\n                <SymbolWrapper\n                  backgroundColor={\n                    index > 0 ? backgroundColor : defaultBackgroundColor\n                  }\n                  textColor={index > 0 ? textColor : defaultTextColor}\n                >\n                  {symbol_with_value.symbol}\n                </SymbolWrapper>\n                {symbol_with_value.value}\n              </Tooltip>\n            </ComparisonValue>\n          ))}\n        </div>\n      </NumbersContainer>\n    </div>\n  );\n}\n"],"names":["iso8601","String","raw","datetimeConstant","grainValue","grain","CUSTOM_RANGE_EXPRESSION","RegExp","ISO8601_AND_CONSTANT","DATETIME_CONSTANT","SEVEN_DAYS_AGO","Date","setHours","MIDNIGHT","defaultCustomRange","sinceDatetime","setDate","getDate","toString","sinceMode","sinceGrain","sinceGrainValue","untilDatetime","untilMode","untilGrain","untilGrainValue","anchorMode","anchorValue","customTimeRangeDecode","timeRange","splitDateRange","split","SEPARATOR","length","since","until","test","includes","customRange","matchedFlag","sinceCapturedGroup","match","dttm","slice","parseInt","untilCapturedGroup","sinceDttm","untilDttm","buildTimeRangeString","formatDateEndpoint","isStart","replace","formatTimeRange","columnPlaceholder","fetchTimeRange","async","shifts","query","endpoint","_isEmpty","rison","timeRanges","ensureIsArray","map","shift","_response$json3","response","SupersetClient","get","_response$json","_response$json$result","_response$json2","_response$json2$resul","timeRangeString","json","result","value","formatTimeRangeComparison","initialTimeRange","shiftedTimeRange","splitInitialDateRange","splitShiftedDateRange","clientError","getClientErrorObject","error","message","statusText","DAY_IN_MS","parseDttmToDate","isEndDate","computingShifts","now","getTimezoneOffset","setUTCDate","getUTCDate","setUTCMonth","getUTCMonth","setUTCFullYear","getUTCFullYear","getDay","setMonth","getMonth","setFullYear","getFullYear","parts","amount","parsed","UTC","Number","isNaN","getTime","computeCustomDateTime","setSeconds","getSeconds","setMinutes","getMinutes","getHours","getTimeOffset","timeRangeFilter","startDate","includeFutureOffsets","_timeRangeFilter$comp","_timeRangeFilter$comp2","_ref","_customStartDate2","_ref2","_customEndDate2","comparator","customStartDate","customEndDate","_customStartDate","_customEndDate","isCustom","isInherit","customStartDateTime","_parseDttmToDate","setUTCHours","startStr","endStr","date","trim","filterStartDateTime","filterEndDateTime","customShift","Math","round","inInheritShift","newShifts","undefined","filter","useOverflowDetection","flexGap","symbolContainerRef","useRef","wrapperRef","isOverflowing","setIsOverflowing","useState","useEffect","obs","symbolContainerElem","current","wrapperElem","symbolContainerChildrenElems","Array","from","children","ResizeObserver","_debounce","reduce","acc","element","_element$firstElement","_element$firstElement2","firstElementChild","scrollWidth","max","clientWidth","observe","document","body","forEach","elem","_obs","disconnect","NumbersContainer","styled","div","ComparisonValue","theme","subheaderFontSize","typography","weights","light","SymbolWrapper","span","backgroundColor","textColor","gridUnit","PopKPI","props","height","width","bigNumber","prevNumber","valueDifference","percentDifferenceFormattedString","headerFontSize","comparisonColorEnabled","comparisonColorScheme","percentDifferenceNumber","currentTimeRangeFilter","startDateOffset","dashboardTimeRange","comparisonRange","setComparisonRange","promise","subject","Promise","resolve","then","res","_res$value","dates","DEFAULT_DATE_PATTERN","parsedStartDate","parsedEndDate","newShift","rangeText","flat","useTheme","wrapperDivStyles","css","families","sansSerif","bigValueContainerStyles","normal","arrowIndicatorStyle","ColorSchemeEnum","Green","colors","success","base","Red","grayscale","defaultBackgroundColor","light4","defaultTextColor","useMemo","bgColor","txtColor","useSuccess","light2","SYMBOLS_WITH_VALUES","symbol","tooltipText","t","_jsx","ref","_jsxs","symbol_with_value","index","Tooltip","id","placement","title"],"sourceRoot":""}